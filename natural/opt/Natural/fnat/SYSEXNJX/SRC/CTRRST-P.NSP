0010* >Natural Source Header 000000
0020* :Mode S
0030* :CP
0040* <Natural Source Header
0050DEFINE DATA LOCAL
00601 CDINDEX (I4)
00701 CEVENT (A) DYNAMIC
00801 CINDEX (I4)
00901 CROWCOUNT (I4)
01001 CSIZE (I4)
01101 CTOPINDEX (I4)
01201 INFOPAGENAME (A) DYNAMIC INIT <'html/ctrlrowtablearea2tree.html'>
01301 LINES (1:*)
0140  2 DRAGINFO (A) DYNAMIC
0150  2 DROPINFO (A) DYNAMIC
0160  2 FIRST (A) DYNAMIC
0170  2 ID (A) DYNAMIC
0180  2 INFOBUTTONVISIBLE (L)
0190  2 LAST (A) DYNAMIC
0200  2 LEVEL (I4)
0210  2 OPENED (I4)
0220  2 SELECTED (L)
0230  2 TEXT (A) DYNAMIC
02401 LINESINFO
0250  2 DSPINDEXFIRST (I4)
0260  2 ROWCOUNT (I4)
0270  2 SIZE (I4)
0280  2 SORTPROPS (1:*)
0290    3 ASCENDING (L)
0300    3 PROPNAME (A) DYNAMIC
0310  2 TOPINDEX (I4)
03201 XCIEVENTDATA
0330  2 XCIINDEX (I4)
0340*
0350* Number of rows initially displayed.
03601 CROWS (I4) CONST <15>
0370*
0380* Department record.
03901 DEPT VIEW OF EMPLOYEES
0400  2 DEPT
0410* Employees record.
04201 EMPL VIEW OF EMPLOYEES
0430  2 PERSONNEL-ID
0440  2 NAME
0450  2 REDEFINE NAME
0460    3 NAME1 (A1)
0470    3 NAME2 (A19)
0480  2 FIRST-NAME
0490  2 REDEFINE FIRST-NAME
0500    3 FIRST-NAME1 (A1)
0510    3 FIRST-NAME2 (A19)
0520*
0530* Server side cache of top nodes.
05401 CACHE (1:*)
0550* Node text.
0560  2 TEXT (A) DYNAMIC
0570* Open state of child nodes.
0580  2 COPEN (I4)
0590* Count of child nodes.
0600  2 CCOUNT (I4)
06101 I (I4)
06201 J (I4)
06301 K (I4)
06401 IND (I4)
06501 STARTINDEX (I4)
0660*
06701 #ROWCOUNT (I4)
06801 #LINECOUNT (I4)
06901 #TOPNODES (I4)
07001 #NODES (I4)
07101 #MSG1 (A72) INIT <'This example needs the EMPLOYEES file in the demo database'>
07201 #MSG2 (A24)
0730END-DEFINE
0740*
0750* Initialize the server side cache.
0760PERFORM INITCACHE
0770* Define the portion of lines to display initially.
0780LINESINFO.TOPINDEX := 0
0790LINESINFO.ROWCOUNT := CROWS
0800* Calulate the (initial) total number of records.
0810PERFORM GETSIZE
0820* Get the requested portion of lines.
0830PERFORM GETLINES
0840* Initialize the status info.
0850PERFORM SETSTATUSINFO
0860*
0870* Display the page.
0880PROCESS PAGE USING 'CTRRST-A'
0890*
0900* Handle the events.
0910DECIDE ON FIRST *PAGE-EVENT
0920  VALUE U'nat:page.end'
0930* Leave the program.
0940    IGNORE
0950*
0960* We need these three events to handle scrolling and toggling.
0970  VALUE U'lines.onTopindexChanged',
0980      U'lines.reactOnToggle'
0990* Synchronize the server side cache with the page display.
1000    PERFORM UPDATECACHE
1010* Get the requested portion of lines.
1020    PERFORM GETLINES
1030* Update the status info.
1040    PERFORM SETSTATUSINFO
1050* And return.
1060    PROCESS PAGE UPDATE FULL
1070*
1080  NONE VALUE
1090* Update the status info.
1100    PERFORM SETSTATUSINFO
1110* And return.
1120    PROCESS PAGE UPDATE FULL
1130END-DECIDE
1140*
1150* Initialize the server side cache.
1160DEFINE SUBROUTINE INITCACHE
1170* Determine the number of top nodes.
1180RESET #TOPNODES
1190HISTOGRAM DEPT FOR DEPT
1200  ADD 1 TO #TOPNODES
1210END-HISTOGRAM
1220EXPAND ARRAY CACHE TO (1:#TOPNODES)
1230* Add the top nodes.
1240RESET #TOPNODES
1250HISTOGRAM DEPT FOR DEPT
1260  ADD 1 TO #TOPNODES
1270  CACHE.TEXT (#TOPNODES) := DEPT.DEPT
1280  CACHE.COPEN (#TOPNODES) := 0
1290  CACHE.CCOUNT (#TOPNODES) := 0
1300END-HISTOGRAM
1310END-SUBROUTINE
1320*
1330DEFINE SUBROUTINE UPDATECACHE
1340* Synchronize the cache with the page display.
1350* Keep track of nodes that got their their child nodes toggled.
1360IF *PAGE-EVENT = U'lines.reactOnToggle'
1370  I := XCIEVENTDATA.XCIINDEX
1380  IF LINES.LEVEL (I) EQ 1
1390    EXAMINE FULL CACHE.TEXT(*) FOR LINES.TEXT (I)
1400      GIVING INDEX IN J
1410    IF J NE 0
1420      CACHE.COPEN (J) := LINES.OPENED (I)
1430    END-IF
1440  END-IF
1450END-IF
1460END-SUBROUTINE
1470*
1480DEFINE SUBROUTINE GETLINES
1490* Get the requested portion of lines.
1500* Calculate the requested portion of nodes from top index and row count.
1510PERFORM GETINDEXES
1520* Get the child count for the top nodes that were not yet displayed.
1530IND := STARTINDEX
1540#ROWCOUNT := LINESINFO.ROWCOUNT
1550#LINECOUNT := #ROWCOUNT
1560FOR I := 1 TO #ROWCOUNT
1570* Add the child nodes.
1580  IF CACHE.COPEN (IND+I) NE 0 AND CACHE.CCOUNT (IND+I) EQ 0
1590    FIND NUMBER EMPL WITH DEPT = CACHE.TEXT (IND+I)
1600    CACHE.CCOUNT (IND+I) := *NUMBER
1610  END-IF
1620  ADD CACHE.CCOUNT (IND+I) TO #LINECOUNT
1630END-FOR
1640* Copy the requested portion of lines into the page buffer.
1650REDUCE ARRAY LINES TO 0
1660EXPAND ARRAY LINES TO (1:#LINECOUNT)
1670RESET J
1680FOR I := 1 TO #ROWCOUNT
1690  ADD 1 TO J
1700  LINES.TEXT (J) := CACHE.TEXT (IND+I)
1710  LINES.OPENED (J) := CACHE.COPEN (IND+I)
1720  LINES.LEVEL (J) := 1
1730  LINES.INFOBUTTONVISIBLE (J) := TRUE
1740  IF CACHE.CCOUNT (IND+I) NE 0
1750    FIND EMPL WITH DEPT = CACHE.TEXT (IND+I)
1760      ADD 1 TO J
1770      RESET LINES.TEXT (J)
1780      LINES.OPENED (J) := 2
1790      LINES.LEVEL (J) := 2
1800      LINES.ID (J) := EMPL.PERSONNEL-ID
1810      EXAMINE EMPL.NAME2 TRANSLATE INTO LOWER
1820      EXAMINE EMPL.FIRST-NAME2 TRANSLATE INTO LOWER
1830      LINES.LAST (J) := EMPL.NAME
1840      LINES.FIRST (J) := EMPL.FIRST-NAME
1850    END-FIND
1860  END-IF
1870END-FOR
1880RESET LINES.INFOBUTTONVISIBLE(*)
1890END-SUBROUTINE
1900*
1910DEFINE SUBROUTINE GETSIZE
1920* Calulate the (initial) total number of records.
1930LINESINFO.SIZE := *OCC(CACHE.TEXT)
1940END-SUBROUTINE
1950*
1960DEFINE SUBROUTINE GETINDEXES
1970* Calculate LINESINFO.DSPINDEXFIRST and STARTINDEX for GETLINES.
1980RESET STARTINDEX
1990RESET LINESINFO.DSPINDEXFIRST
2000RESET #NODES
2010FOR #TOPNODES := 1 TO *OCC(CACHE.TEXT)
2020  ADD 1 TO #NODES
2030  IF CACHE.COPEN (#TOPNODES) EQ 1
2040    ADD CACHE.CCOUNT (#TOPNODES) TO #NODES
2050  END-IF
2060  IF #NODES GE LINESINFO.TOPINDEX + 1
2070    STARTINDEX := #TOPNODES - 1
2080    IF CACHE.COPEN (#TOPNODES) EQ 1
2090      SUBTRACT CACHE.CCOUNT (#TOPNODES) FROM #NODES
2100    END-IF
2110    LINESINFO.DSPINDEXFIRST := #NODES - 1
2120    ESCAPE ROUTINE
2130  END-IF
2140END-FOR
2150END-SUBROUTINE
2160*
2170DEFINE SUBROUTINE SETSTATUSINFO
2180* Update the status info displayed at the top of the page.
2190CEVENT := *PAGE-EVENT
2200CROWCOUNT := LINESINFO.ROWCOUNT
2210CSIZE := LINESINFO.SIZE
2220CTOPINDEX := LINESINFO.TOPINDEX
2230CDINDEX := LINESINFO.DSPINDEXFIRST
2240CINDEX := XCIEVENTDATA.XCIINDEX
2250END-SUBROUTINE
2260*
2270ON ERROR
2280  IF *LEVEL > 1
2290    COMPRESS '(NAT' *ERROR-NR ').' TO #MSG2 LEAVING NO
2300    COMPRESS #MSG1 #MSG2 TO #MSG1
2310    STACK TOP DATA #MSG1
2320    RESET *ERROR-NR
2330    ESCAPE ROUTINE
2340  END-IF
2350END-ERROR
2360END
