0010* >Natural Source Header 000000
0020* :Mode S
0030* :CP
0040* <Natural Source Header
0050DEFINE DATA LOCAL
00601 CASC (L)
00701 CEVENT (A) DYNAMIC
00801 CINDEX (I4)
00901 CROWCOUNT (I4)
01001 CSIZE (I4)
01101 CSORT (A) DYNAMIC
01201 CTOPINDEX (I4)
01301 INFOPAGENAME (A) DYNAMIC INIT <'html/ctrlrowtablearea2.html'>
01401 LINES (1:*)
0150  2 FIRST (A) DYNAMIC
0160  2 ID (A) DYNAMIC
0170  2 LAST (A) DYNAMIC
0180  2 SELECTED (L)
01901 LINESINFO
0200  2 ROWCOUNT (I4)
0210  2 SIZE (I4)
0220  2 SORTPROPS (1:*)
0230    3 ASCENDING (L)
0240    3 PROPNAME (A) DYNAMIC
0250  2 TOPINDEX (I4)
02601 XCIEVENTDATA
0270  2 XCIINDEX (I4)
0280*
02901 EMPL VIEW OF EMPLOYEES
0300  2 PERSONNEL-ID
0310  2 NAME
0320  2 REDEFINE NAME
0330    3 NAME1 (A1)
0340    3 NAME2 (A19)
0350  2 FIRST-NAME
0360  2 REDEFINE FIRST-NAME
0370    3 FIRST-NAME1 (A1)
0380    3 FIRST-NAME2 (A19)
0390*
04001 #CACHE (1:*)
0410  2 FIRST (A) DYNAMIC
0420  2 ID (A) DYNAMIC
0430  2 LAST (A) DYNAMIC
0440  2 SELECTED (L)
04501 #SORT
0460  2 FIRST (A20)
0470  2 ID (A8)
0480  2 LAST (A20)
0490  2 SELECTED (L)
05001 #LAST
0510  2 TOPINDEX (I4)
0520*
05301 #II (I2)
05401 #IE (I2)
05501 #IL (I2)
05601 #IK (I2)
05701 #CROWS (I4) CONST <30>
05801 #MSG1 (A72) INIT <'This example needs the EMPLOYEES file in the demo database'>
05901 #MSG2 (A24)
0600END-DEFINE
0610*
0620PERFORM INITCACHE
0630PERFORM GETLINES
0640PERFORM SETCONTROLINFO
0650*
0660PROCESS PAGE USING 'CTRRSS-A'
0670*
0680DECIDE ON FIRST *PAGE-EVENT
0690  VALUE U'nat:page.end'
0700    IGNORE
0710  VALUE U'lines.onSort'
0720    PERFORM UPDATECACHE
0730    PERFORM SORTLINES
0740    PERFORM GETLINES
0750    PERFORM SETCONTROLINFO
0760    PROCESS PAGE UPDATE FULL
0770  VALUE U'lines.onTopindexChanged'
0780    PERFORM UPDATECACHE
0790    PERFORM GETLINES
0800    PERFORM SETCONTROLINFO
0810    PROCESS PAGE UPDATE FULL
0820  NONE VALUE
0830    PERFORM UPDATECACHE
0840    PERFORM SETCONTROLINFO
0850    PROCESS PAGE UPDATE FULL
0860END-DECIDE
0870*
0880DEFINE SUBROUTINE INITCACHE
0890FIND NUMBER EMPL WITH PERSONNEL-ID NE ' '
0900#IK := *NUMBER
0910EXPAND ARRAY #CACHE TO (1:#IK)
0920RESET #II
0930READ EMPL BY PERSONNEL-ID
0940  ADD 1 TO #II
0950  IF #II GT #IK
0960    ESCAPE BOTTOM
0970  END-IF
0980  #CACHE.ID(#II) := EMPL.PERSONNEL-ID
0990  EXAMINE EMPL.NAME2 TRANSLATE INTO LOWER
1000  EXAMINE EMPL.FIRST-NAME2 TRANSLATE INTO LOWER
1010  #CACHE.LAST(#II) := EMPL.NAME
1020  #CACHE.FIRST(#II) := EMPL.FIRST-NAME
1030END-READ
1040LINESINFO.SIZE := *OCC(#CACHE.ID)
1050LINESINFO.ROWCOUNT := #CROWS
1060LINESINFO.TOPINDEX := 0
1070END-SUBROUTINE
1080*
1090DEFINE SUBROUTINE UPDATECACHE
1100DECIDE ON FIRST *PAGE-EVENT
1110  VALUE U'lines.onCtrlSelect'
1120    FOR #II := 1 TO *OCC(LINES.FIRST)
1130      #IE := #II + #LAST.TOPINDEX
1140      #CACHE.SELECTED(#IE) := LINES.SELECTED(#II)
1150    END-FOR
1160  VALUE U'lines.onSelect'
1170    #CACHE.SELECTED(*) := FALSE
1180    #IE := #LAST.TOPINDEX + XCIEVENTDATA.XCIINDEX
1190    #CACHE.SELECTED(#IE) := TRUE
1200  VALUE U'lines.onShiftSelect'
1210    #IE := #LAST.TOPINDEX + XCIEVENTDATA.XCIINDEX
1220    #CACHE.SELECTED(#IE) := TRUE
1230    #IL := #IE - 1
1240    FOR #II := #IL TO 1 STEP -1
1250      IF #CACHE.SELECTED(#II)
1260        #CACHE.SELECTED(#II:#IE) := TRUE
1270        ESCAPE ROUTINE
1280      END-IF
1290    END-FOR
1300    #IL := #IE + 1
1310    FOR #II := #IL TO *OCC(#CACHE.SELECTED)
1320      IF #CACHE.SELECTED(#II)
1330        #CACHE.SELECTED(#IE:#II) := TRUE
1340        ESCAPE ROUTINE
1350      END-IF
1360    END-FOR
1370  NONE VALUE
1380    FOR #II := 1 TO *OCC(LINES.FIRST)
1390      #IE := #II + #LAST.TOPINDEX
1400      #CACHE.SELECTED(#IE) := LINES.SELECTED(#II)
1410    END-FOR
1420END-DECIDE
1430END-SUBROUTINE
1440*
1450DEFINE SUBROUTINE GETLINES
1460#IK := LINESINFO.ROWCOUNT
1470IF LINESINFO.SIZE < LINESINFO.ROWCOUNT
1480  #IK := LINESINFO.SIZE
1490END-IF
1500#II := LINESINFO.TOPINDEX + 1
1510#IE := LINESINFO.TOPINDEX + #IK
1520RESIZE ARRAY LINES TO (1:#IK)
1530MOVE BY NAME #CACHE(#II:#IE) TO LINES(1:#IK)
1540END-SUBROUTINE
1550*
1560DEFINE SUBROUTINE SETCONTROLINFO
1570CEVENT := *PAGE-EVENT
1580CROWCOUNT := LINESINFO.ROWCOUNT
1590CSIZE := LINESINFO.SIZE
1600CTOPINDEX := LINESINFO.TOPINDEX
1610IF *OCC(LINESINFO.PROPNAME) GT 0
1620  CASC := LINESINFO.ASCENDING(1)
1630  CSORT := LINESINFO.PROPNAME(1)
1640END-IF
1650CINDEX := XCIEVENTDATA.XCIINDEX
1660#LAST.TOPINDEX := LINESINFO.TOPINDEX
1670END-SUBROUTINE
1680*
1690DEFINE SUBROUTINE SORTLINES
1700IF *OCC(PROPNAME) > 0
1710  DECIDE ON FIRST PROPNAME(1)
1720    VALUE 'first'
1730      IF ASCENDING(1) PERFORM SORTAFIRST
1740      ELSE PERFORM SORTDFIRST
1750      END-IF
1760    VALUE 'id'
1770      IF ASCENDING(1) PERFORM SORTAID
1780      ELSE PERFORM SORTDID
1790      END-IF
1800    VALUE 'last'
1810      IF ASCENDING(1) PERFORM SORTALAST
1820      ELSE PERFORM SORTDLAST
1830      END-IF
1840    NONE VALUE
1850      IGNORE
1860  END-DECIDE
1870END-IF
1880END-SUBROUTINE
1890*
1900DEFINE SUBROUTINE SORTAFIRST
1910#IK := 1
1920FOR #II = 1 TO *OCC(#CACHE.FIRST)
1930  #SORT.FIRST := #CACHE.FIRST(#II)
1940  #SORT.ID := #CACHE.ID(#II)
1950  #SORT.LAST := #CACHE.LAST(#II)
1960  #SORT.SELECTED := #CACHE.SELECTED(#II)
1970END-ALL
1980  AND
1990SORT BY #SORT.FIRST ASCENDING USING #SORT.ID #SORT.LAST #SORT.SELECTED
2000  #CACHE.FIRST(#IK) := #SORT.FIRST
2010  #CACHE.ID(#IK) := #SORT.ID
2020  #CACHE.LAST(#IK) := #SORT.LAST
2030  #CACHE.SELECTED(#IK) := #SORT.SELECTED
2040  ADD 1 TO #IK
2050END-SORT
2060END-SUBROUTINE
2070*
2080DEFINE SUBROUTINE SORTDFIRST
2090#IK := 1
2100FOR #II = 1 TO *OCC(#CACHE.FIRST)
2110  #SORT.FIRST := #CACHE.FIRST(#II)
2120  #SORT.ID := #CACHE.ID(#II)
2130  #SORT.LAST := #CACHE.LAST(#II)
2140  #SORT.SELECTED := #CACHE.SELECTED(#II)
2150END-ALL
2160  AND
2170SORT BY #SORT.FIRST DESCENDING USING #SORT.ID #SORT.LAST #SORT.SELECTED
2180  #CACHE.FIRST(#IK) := #SORT.FIRST
2190  #CACHE.ID(#IK) := #SORT.ID
2200  #CACHE.LAST(#IK) := #SORT.LAST
2210  #CACHE.SELECTED(#IK) := #SORT.SELECTED
2220  ADD 1 TO #IK
2230END-SORT
2240END-SUBROUTINE
2250*
2260DEFINE SUBROUTINE SORTAID
2270#IK := 1
2280FOR #II = 1 TO *OCC(#CACHE.FIRST)
2290  #SORT.FIRST := #CACHE.FIRST(#II)
2300  #SORT.ID := #CACHE.ID(#II)
2310  #SORT.LAST := #CACHE.LAST(#II)
2320  #SORT.SELECTED := #CACHE.SELECTED(#II)
2330END-ALL
2340  AND
2350SORT BY #SORT.ID ASCENDING USING #SORT.FIRST #SORT.LAST #SORT.SELECTED
2360  #CACHE.FIRST(#IK) := #SORT.FIRST
2370  #CACHE.ID(#IK) := #SORT.ID
2380  #CACHE.LAST(#IK) := #SORT.LAST
2390  #CACHE.SELECTED(#IK) := #SORT.SELECTED
2400  ADD 1 TO #IK
2410END-SORT
2420END-SUBROUTINE
2430*
2440DEFINE SUBROUTINE SORTDID
2450#IK := 1
2460FOR #II = 1 TO *OCC(#CACHE.FIRST)
2470  #SORT.FIRST := #CACHE.FIRST(#II)
2480  #SORT.ID := #CACHE.ID(#II)
2490  #SORT.LAST := #CACHE.LAST(#II)
2500  #SORT.SELECTED := #CACHE.SELECTED(#II)
2510END-ALL
2520  AND
2530SORT BY #SORT.ID DESCENDING USING #SORT.FIRST #SORT.LAST #SORT.SELECTED
2540  #CACHE.FIRST(#IK) := #SORT.FIRST
2550  #CACHE.ID(#IK) := #SORT.ID
2560  #CACHE.LAST(#IK) := #SORT.LAST
2570  #CACHE.SELECTED(#IK) := #SORT.SELECTED
2580  ADD 1 TO #IK
2590END-SORT
2600END-SUBROUTINE
2610*
2620DEFINE SUBROUTINE SORTALAST
2630#IK := 1
2640FOR #II = 1 TO *OCC(#CACHE.FIRST)
2650  #SORT.FIRST := #CACHE.FIRST(#II)
2660  #SORT.ID := #CACHE.ID(#II)
2670  #SORT.LAST := #CACHE.LAST(#II)
2680  #SORT.SELECTED := #CACHE.SELECTED(#II)
2690END-ALL
2700  AND
2710SORT BY #SORT.LAST ASCENDING USING #SORT.FIRST #SORT.ID #SORT.SELECTED
2720  #CACHE.FIRST(#IK) := #SORT.FIRST
2730  #CACHE.ID(#IK) := #SORT.ID
2740  #CACHE.LAST(#IK) := #SORT.LAST
2750  #CACHE.SELECTED(#IK) := #SORT.SELECTED
2760  ADD 1 TO #IK
2770END-SORT
2780END-SUBROUTINE
2790*
2800DEFINE SUBROUTINE SORTDLAST
2810#IK := 1
2820FOR #II = 1 TO *OCC(#CACHE.FIRST)
2830  #SORT.FIRST := #CACHE.FIRST(#II)
2840  #SORT.ID := #CACHE.ID(#II)
2850  #SORT.LAST := #CACHE.LAST(#II)
2860  #SORT.SELECTED := #CACHE.SELECTED(#II)
2870END-ALL
2880  AND
2890SORT BY #SORT.LAST DESCENDING USING #SORT.FIRST #SORT.ID #SORT.SELECTED
2900  #CACHE.FIRST(#IK) := #SORT.FIRST
2910  #CACHE.ID(#IK) := #SORT.ID
2920  #CACHE.LAST(#IK) := #SORT.LAST
2930  #CACHE.SELECTED(#IK) := #SORT.SELECTED
2940  ADD 1 TO #IK
2950END-SORT
2960END-SUBROUTINE
2970*
2980ON ERROR
2990  IF *LEVEL > 1
3000    COMPRESS '(NAT' *ERROR-NR ').' TO #MSG2 LEAVING NO
3010    COMPRESS #MSG1 #MSG2 TO #MSG1
3020    STACK TOP DATA #MSG1
3030    RESET *ERROR-NR
3040    ESCAPE ROUTINE
3050  END-IF
3060END-ERROR
3070END
