0010* ----------------------------------------------------------------------
0020* CLASS  Natural Web Interface - New Demo Application
0030*
0040*        D6EM2XML
0050*
0060* DESCRIPTION
0070*               List Persons
0080*
0090* AUTHOR        SAG   08.09.1998
0100*
0110* Version       8.3
0120*
0130* Copyright (c) 1997-2016 Software AG, Germany.  All rights reserved.
0140*
0150* HISTORY
0160* USER    DATE       REASON
0170* ------+------------+--------------------------------------------
0180* SAG   ! 18.03.2004 ! copy of D6EMXML -> use with callnat
0190* ------+------------+--------------------------------------------
0200*
0210* ------ PARAMETER -----------------------------------------------
0220DEFINE DATA
0230PARAMETER
02401 #XML   (A) DYNAMIC
0250PARAMETER USING D6-PARM
0260LOCAL USING W3CONST
0270LOCAL
02801 ##FROM (A) DYNAMIC
02901 ##TO   (A) DYNAMIC
0300*
03101 #BIRTH (A10)
0320LOCAL
03301 EMPLOYEES-VIEW VIEW OF EMPLOYEES
0340  2 PERSONNEL-ID
0350  2 FIRST-NAME
0360  2 NAME
0370  2 MIDDLE-NAME
0380* 2 MIDDLE-I    /* known problem:
0390*               /* if adabas nucleus parameter options=(Trucation)
0400*               /* is not set, NAT3055 occurres
0410*               /* -> MIDDLE-I is not used for this example
0420  2 ADDRESS-LINE(6)
0430  2 C*ADDRESS-LINE
0440  2 SEX
0450  2 BIRTH
0460  2 CITY
0470  2 ZIP
0480  2 POST-CODE
0490  2 COUNTRY
0500  2 AREA-CODE
0510  2 PHONE
0520  2 MAR-STAT
0530  2 DEPT
0540  2 JOB-TITLE
0550  2 INCOME(6)
0560    3 BONUS(4)
0570    3 C*BONUS
0580    3 SALARY
0590    3 CURR-CODE
0600  2 C*INCOME
0610  2 LEAVE-DATA
0620    3 LEAVE-DUE
0630    3 LEAVE-TAKEN
0640  2 LEAVE-BOOKED(4)
0650    3 LEAVE-START
0660    3 LEAVE-END
0670  2 C*LEAVE-BOOKED
0680  2 LANG(4)
0690  2 C*LANG
0700*
07101 #I (N7)  INIT <0>
07201 #J (N3)  INIT <0>
0730*
07401 #IK (I4)
07501 #IL (I4)
0760END-DEFINE
0770*
0780##FROM := #DEMO-PARM.#FROM
0790##TO   := #DEMO-PARM.#TO
0800IF #TO EQ #FROM OR #TO EQ " " THEN
0810  COMPRESS ##FROM H'FF' INTO ##TO LEAVING NO
0820END-IF
0830*
0840#J := #DEMO-PARM.#END-MAX
0850*
0860IF #DEMO-PARM.#START = 0
0870  ADD 1 TO #I
0880END-IF
0890*
0900#XML := '<?xml version="1.0" encoding="ISO-8859-1" ?>' -H'0D0A' -'<Result>'
0910*
0920F. FIND EMPLOYEES-VIEW WITH NAME = ##FROM THRU ##TO SORTED BY NAME
0930  IF NO
0940    COMPRESS 'Sorry nothing found for from:' ##FROM ' to:'
0950      ##TO INTO #DEMO-PARM.#MSG
0960  END-NOREC
0970  IF *NUMBER(F.) > 0
0980*
0990    IF *COUNTER(F.) GE #DEMO-PARM.#START THEN
1000      ADD 1 TO #I
1010      COMPRESS #XML '<Employee Personnel-ID="'
1020        EMPLOYEES-VIEW.PERSONNEL-ID '">' INTO #XML LEAVING NO
1030      /* now the children
1040      COMPRESS #XML '<Full-Name>' INTO #XML LEAVING NO
1050      COMPRESS #XML '<First-Name>' EMPLOYEES-VIEW.FIRST-NAME
1060        '</First-Name>' INTO #XML LEAVING NO
1070      COMPRESS #XML '<Middle-Name>' EMPLOYEES-VIEW.MIDDLE-NAME
1080        '</Middle-Name>' INTO #XML LEAVING NO
1090*     /* see declaration of MIDDLE-I for known problem
1100*     COMPRESS #XML '<Middle-I>' EMPLOYEES-VIEW.MIDDLE-I
1110*       '</Middle-I>' INTO #XML LEAVING NO
1120      COMPRESS #XML '<Name>' EMPLOYEES-VIEW.NAME
1130        '</Name>' INTO #XML LEAVING NO
1140      COMPRESS #XML '</Full-Name>' INTO #XML LEAVING NO
1150      /*
1160      COMPRESS #XML '<Mar-Stat>' EMPLOYEES-VIEW.MAR-STAT
1170        '</Mar-Stat>' INTO #XML LEAVING NO
1180      COMPRESS #XML '<Sex>' EMPLOYEES-VIEW.SEX
1190        '</Sex>' INTO #XML LEAVING NO
1200      /*
1210      MOVE EDITED EMPLOYEES-VIEW.BIRTH (EM=YYYY-MM-DD) TO #BIRTH
1220      COMPRESS #XML '<Birth>' #BIRTH '</Birth>' INTO #XML LEAVING NO
1230      /*
1240      /* now the children
1250      COMPRESS #XML '<Full-Address>' INTO #XML LEAVING NO
1260      IF EMPLOYEES-VIEW.C*ADDRESS-LINE GT 0 THEN
1270        FOR #IK = 1 TO EMPLOYEES-VIEW.C*ADDRESS-LINE
1280          COMPRESS #XML '<Address-Line>' EMPLOYEES-VIEW.ADDRESS-LINE(#IK)
1290            '</Address-Line>' INTO #XML LEAVING NO
1300        END-FOR
1310      END-IF
1320      IF EMPLOYEES-VIEW.CITY NE " " OR
1330          EMPLOYEES-VIEW.ZIP  NE " " OR
1340          EMPLOYEES-VIEW.ZIP NE " " OR
1350          EMPLOYEES-VIEW.COUNTRY  NE " " THEN
1360        COMPRESS #XML '<City>' EMPLOYEES-VIEW.CITY
1370          '</City>' INTO #XML LEAVING NO
1380        COMPRESS #XML '<Zip>' EMPLOYEES-VIEW.ZIP
1390          '</Zip>' INTO #XML LEAVING NO
1400        COMPRESS #XML '<Post-Code>' EMPLOYEES-VIEW.POST-CODE
1410          '</Post-Code>' INTO #XML LEAVING NO
1420        COMPRESS #XML '<Country>' EMPLOYEES-VIEW.COUNTRY
1430          '</Country>' INTO #XML LEAVING NO
1440      END-IF
1450      COMPRESS #XML '</Full-Address>' INTO #XML LEAVING NO
1460      /*
1470      IF EMPLOYEES-VIEW.PHONE NE " " OR
1480      EMPLOYEES-VIEW.AREA-CODE NE " " THEN
1490        COMPRESS #XML '<Telephone>' INTO #XML LEAVING NO
1500        /* now the children
1510        COMPRESS #XML '<Phone>' EMPLOYEES-VIEW.PHONE
1520          '</Phone>' INTO #XML LEAVING NO
1530        COMPRESS #XML '<Area-Code>' EMPLOYEES-VIEW.AREA-CODE
1540          '</Area-Code>' INTO #XML LEAVING NO
1550        COMPRESS #XML '</Telephone>' INTO #XML LEAVING NO
1560      END-IF
1570      /*
1580      IF EMPLOYEES-VIEW.DEPT NE " " THEN
1590        COMPRESS #XML '<Dept>' EMPLOYEES-VIEW.DEPT
1600          '</Dept>' INTO #XML LEAVING NO
1610      END-IF
1620      /*
1630      IF  EMPLOYEES-VIEW.JOB-TITLE NE " " THEN
1640        COMPRESS #XML '<Job-Title>' EMPLOYEES-VIEW.JOB-TITLE
1650          '</Job-Title>' INTO #XML LEAVING NO
1660      END-IF
1670      /*
1680      FOR #IK = 1 TO EMPLOYEES-VIEW.C*INCOME
1690        COMPRESS #XML '<Income>' INTO #XML LEAVING NO
1700        /* now the children
1710        COMPRESS #XML '<Curr-Code>' EMPLOYEES-VIEW.CURR-CODE(#IK)
1720          '</Curr-Code>' INTO #XML LEAVING NO
1730        COMPRESS #XML '<Salary>' EMPLOYEES-VIEW.SALARY(#IK)
1740          '</Salary>' INTO #XML LEAVING NO
1750        /*
1760        FOR #IL = 1 TO EMPLOYEES-VIEW.C*BONUS(#IK)
1770          COMPRESS #XML '<Bonus>' EMPLOYEES-VIEW.BONUS(#IK,#IL)
1780            '</Bonus>' INTO #XML LEAVING NO
1790        END-FOR
1800        /*
1810        COMPRESS #XML '</Income>' INTO #XML LEAVING NO
1820      END-FOR
1830      /*
1840      IF EMPLOYEES-VIEW.LEAVE-DUE NE 0 OR
1850      EMPLOYEES-VIEW.LEAVE-TAKEN  NE 0 THEN
1860        COMPRESS #XML '<Leave-Data'
1870          '>' INTO #XML LEAVING NO
1880        IF EMPLOYEES-VIEW.LEAVE-DUE NE 0 THEN
1890          COMPRESS #XML '<Leave-Due>' EMPLOYEES-VIEW.LEAVE-DUE
1900            '</Leave-Due>' INTO #XML LEAVING NO
1910        END-IF
1920        IF EMPLOYEES-VIEW.LEAVE-TAKEN NE 0 THEN
1930          COMPRESS #XML '<Leave-Taken>' EMPLOYEES-VIEW.LEAVE-TAKEN
1940            '</Leave-Taken>' INTO #XML LEAVING NO
1950        END-IF
1960        /*
1970        COMPRESS #XML '</Leave-Data>' INTO #XML LEAVING NO
1980      END-IF
1990      /*
2000      FOR #IK = 1 TO EMPLOYEES-VIEW.C*LEAVE-BOOKED
2010        COMPRESS #XML '<Leave-Booked>' INTO #XML LEAVING NO
2020        /* now the children
2030        COMPRESS #XML '<Leave-Start>' EMPLOYEES-VIEW.LEAVE-START(#IK)
2040          '</Leave-Start>' INTO #XML LEAVING NO
2050        COMPRESS #XML '<Leave-End>' EMPLOYEES-VIEW.LEAVE-END(#IK)
2060          '</Leave-End>' INTO #XML LEAVING NO
2070        /*
2080        COMPRESS #XML '</Leave-Booked>' INTO #XML LEAVING NO
2090      END-FOR
2100
2110      FOR #IK = 1 TO EMPLOYEES-VIEW.C*LANG
2120        COMPRESS #XML '<Lang>' EMPLOYEES-VIEW.LANG(#IK)
2130          '</Lang>' INTO #XML LEAVING NO
2140      END-FOR
2150      /*
2160      COMPRESS #XML '</Employee>' INTO #XML LEAVING NO
2170*
2180      IF #I GE #J THEN
2190        ESCAPE BOTTOM(F.)
2200      END-IF
2210    END-IF
2220  END-IF
2230END-FIND
2240*
2250COMPRESS #XML '</Result>' INTO #XML LEAVING NO
2260*
2270#DEMO-PARM.#END := *NUMBER(F.)
2280*
2290IF *NUMBER(F.) > 0 AND #DEMO-PARM.#MSG = ' '
2300  #I :=  #DEMO-PARM.#START + #I - 1
2310  COMPRESS 'List of'  *NUMBER(F.) 'objects .... from'
2320    #DEMO-PARM.#FROM 'to' #DEMO-PARM.#TO '; Object'
2330    #DEMO-PARM.#START "-" #I INTO #DEMO-PARM.#MSG
2340END-IF
2350*
2360END
