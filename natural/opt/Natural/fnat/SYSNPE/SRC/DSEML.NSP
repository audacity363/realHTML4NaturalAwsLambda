0010* Program   DSEML
0020* View      SEND-EMAIL
0030*
0040* Function  Send an example email to specified users
0050*
0060* ----------------------------------------------------------------------
0070*
0080DEFINE DATA
0090GLOBAL USING TUTO
0100LOCAL USING DSEML-L
0110LOCAL
01201 #I(I4)
01301 #REC(A73/6)
01401 #SIG(A64/3)
01501 #DATE(A10)
01601 #TIME(A5)
01701 #DOW(A9)
0180END-DEFINE
0190*
0200SET KEY PF5=PGM
0210CALLNAT 'NAT00029'   /* Save current environment
0220SET CONTROL 'L'      /* Set lower case acceptable
0230*
0240* Generate subject
0250*
0260COMPRESS 'E-Mail generated by' *APPLIC-ID
0270  'tutorial program' *PROGRAM INTO SEND-EMAIL.SUBJECT
0280*
0290* Generate a .sig
0300*
0310MOVE 'This email was generated using Entire System Server"s ' -
0320  'SEND-EMAIL' TO #SIG(1)
0330*
0340COMPRESS 'view and the' *APPLIC-ID
0350  'SEND-EMAIL tutorial example program' *PROGRAM
0360  TO #SIG(2)
0370COMPRESS #SIG(2) '.'
0380  TO #SIG(2)
0390  LEAVING NO
0400*
0410#TIME := *TIME
0420MOVE EDITED *DATX(EM=N(9)) TO #DOW
0430MOVE EDITED *DATX(EM=YYYY'-'MM'-'DD) TO #DATE
0440COMPRESS 'It was generated by' *INIT-USER 'on' #DOW #DATE 'at' #TIME
0450  TO #SIG(3)
0460COMPRESS #SIG(3) '.'
0470  TO #SIG(3)
0480  LEAVING NO
0490*
0500* Get the e-mail information
0510*
0520* INPUT (AD=MI'_' IP=OFF)
0530*  / ##TITLE (AD=OI IP=OFF)
0540*  / 27X '(lower case acceptable)'
0550*  //  'To:  (1)' (I) SEND-EMAIL.RECIPIENT(1)(AL=64)
0560*  /   '     (2)'     SEND-EMAIL.RECIPIENT(2)(AL=64)
0570*  /   'Cc:  (1)' (I) SEND-EMAIL.CC-RECIPIENT(1)(AL=64)
0580*  /   '     (2)'     SEND-EMAIL.CC-RECIPIENT(2)(AL=64)
0590*  /   'Reply-to' (I) SEND-EMAIL.REPLY-TO(AL=64)
0600*  /   'Subject:' (I) SEND-EMAIL.SUBJECT(AL=64)
0610*  //  'Message text:' (I)
0620*  /   #REC(*)
0630*  /   '(.sig)  ' (I) #SIG(1)
0640*  /   '        '     #SIG(2)
0650*  /   '        '     #SIG(3)
0660INPUT USING MAP 'DSEML--&'
0670*
0680IF #REC(1) = ' '
0690  REINPUT *1013 MARK *SEND-EMAIL.RECORD
0700END-IF
0710*
0720IF SEND-EMAIL.RECIPIENT(1) = ' '
0730  REINPUT *1042 MARK *SEND-EMAIL.RECIPIENT(1)
0740END-IF
0750*
0760IF *PF-KEY NE 'PF5'
0770  REINPUT *1043
0780END-IF
0790*
0800FOR #I 1 6
0810  MOVE #REC(#I) TO SEND-EMAIL.RECORD
0820  PERFORM PROCESS-SEND-EMAIL
0830END-FOR
0840*
0850MOVE '-- ' TO SEND-EMAIL.RECORD
0860PERFORM PROCESS-SEND-EMAIL
0870*
0880FOR #I 1 3
0890  MOVE #SIG(#I) TO SEND-EMAIL.RECORD
0900  PERFORM PROCESS-SEND-EMAIL
0910END-FOR
0920PROCESS SEND-EMAIL USING RECORD = ' '
0930  ,   SUBJECT      = SEND-EMAIL.SUBJECT
0940  ,   RECIPIENT    = SEND-EMAIL.RECIPIENT(1)
0950  ,   RECIPIENT    = SEND-EMAIL.RECIPIENT(2)
0960  ,   CC-RECIPIENT = SEND-EMAIL.CC-RECIPIENT(1)
0970  ,   CC-RECIPIENT = SEND-EMAIL.CC-RECIPIENT(2)
0980  ,   FUNCTION     = 'CLOSE'
0990  ,   NODE         = ##NODE
1000  GIVING ERROR-CODE
1010  ERROR-TEXT
1020IF SEND-EMAIL.ERROR-CODE NE 0
1030  REINPUT ERROR-TEXT
1040END-IF
1050*
1060CALLNAT 'NAT00030'   /* Restore environment
1070##MSG-NR := 1007
1080*
1090DEFINE SUBROUTINE PROCESS-SEND-EMAIL
1100PROCESS SEND-EMAIL USING RECORD       =  SEND-EMAIL.RECORD
1110  ,   SUBJECT      = SEND-EMAIL.SUBJECT
1120  ,   RECIPIENT    = SEND-EMAIL.RECIPIENT(1)
1130  ,   RECIPIENT    = SEND-EMAIL.RECIPIENT(2)
1140  ,   CC-RECIPIENT = SEND-EMAIL.CC-RECIPIENT(1)
1150  ,   CC-RECIPIENT = SEND-EMAIL.CC-RECIPIENT(2)
1160  ,   REPLY-TO     = SEND-EMAIL.REPLY-TO
1170  ,   DSNAME       = SEND-EMAIL.DSNAME
1180  ,   VOLSER       = SEND-EMAIL.VOLSER
1190  ,   NODE         = ##NODE
1200  GIVING ERROR-CODE
1210  ERROR-TEXT
1220IF SEND-EMAIL.ERROR-CODE NE 0
1230  REINPUT ERROR-TEXT
1240END-IF
1250END-SUBROUTINE
1260*
1270END
