0010* ---------------------------------------------------------- PARAMETER
0020*
0030* XML Parser Version 1.1.1 for long and dynamic varibles
0040*
0050* &1& 'XML_PARSER_INPUT'              /* XML file to be parsed
0060* &2& 'XML_PARSER_XPATH'              /* XPATH to repesent tag...
0070* &3& 'XML_PARSER_XPATH_TYPE'         /* Type of the XPATH:
0080*                                        ? Processing instruction
0090*                                        D DOCTYPE
0100*                                        ! Comment
0110*                                        C CDATA section
0120*                                        T Starting Tag
0130*                                        @ Attribute
0140*                                        / Close Tag
0150*                                        $ Parsed Data
0160* &4& 'XML_PARSER_CONTENT'            /* Content of found tag
0170* &5& 'XML_PARSER_CONTENT_IS_EMPTY'   /* Is TRUE if tag is empty
0180* &6& 'XML_PARSER_ERROR_TEXT'         /* Error Message
0190* &7& 'XML_PARSER_RESPONSE'           /* Error NR; 0 = OK
0200*
0210* ------------------------------------------------------- SET DEFAULTS
0220XML_PARSER_XPATH_NAMES_MAX := 0
0230XML_PARSER_NEXT := 1
0240* ------------- CAN BE REPLACED BY OPTION TQ=OFF WITH NEXT NAT VERSION
0250IF H'41' EQ "A" THEN
0260XML_PARSER_APOSTROPHE := H'27'
0270XML_PARSER_QUOT_MARK  := H'22'
0280XML_PARSER_ATSIGN     := "@"
0290ELSE
0300XML_PARSER_APOSTROPHE := H'7D'
0310XML_PARSER_QUOT_MARK  := H'7F'
0320XML_PARSER_ATSIGN     := "§"
0330END-IF
0340* -------------if not unicode, a xml document always starts with a "<"
0350IF SUBSTRING(&1&,1,1) = "<" THEN
0360* --------------------------------- get length without trailing blanks
0370EXAMINE &1& FOR " " GIVING LENGTH XML_PARSER_INPUT_LENGTH
0380* -------------------------------------------- walk over all CHAR
0390FOR XML_PARSER_II = 1 TO XML_PARSER_INPUT_LENGTH
0400XML_PARSER_XML_2CHARS := SUBSTR(&1&,XML_PARSER_II)
0410DECIDE ON FIRST XML_PARSER_XML_1ST_CHAR
0420* ---------------------------------------------------------- A new Tag
0430VALUE ">"
0440&6& := 'A section was not closed. Line %2% Column %3%.'
0450/* calculate the current line
0460XML_PARSER_IK := 1
0470XML_PARSER_IL := XML_PARSER_II
0480FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
0490IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
0500ADD 1 TO XML_PARSER_IK
0510XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
0520END-IF
0530END-FOR
0540XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
0550EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
0560XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
0570EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
0580&7&   := -21
0590PERFORM PARSER_ERROR
0600ESCAPE ROUTINE
0610VALUE "<"
0620* Replaced by redefiniton of XML_PARSER_XML_2CHARS
0630*       add 1 to XML_PARSER_II
0640*       XML_PARSER_XML_2ND_CHAR := substring(&1&,XML_PARSER_II,1)
0650*       add -1 to XML_PARSER_II
0660* ------------------------------------ Tag is a processing instruction
0670IF XML_PARSER_XML_2ND_CHAR = "?"
0680ADD 1 TO XML_PARSER_XPATH_NAMES_MAX
0690XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) := "?"
0700ADD 2 TO XML_PARSER_II
0710COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
0720INTO &2& WITH DELIMITER "/"
0730FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
0740XML_PARSER_TAG_2CHAR := SUBSTR(&1&,XML_PARSER_IJ)
0750IF  XML_PARSER_TAG_2CHAR = "?>" THEN
0760XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
0770IF XML_PARSER_IL > 0 THEN
0780&4& := SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
0790&5& := FALSE
0800ELSE
0810COMPRESS " " INTO &4& LEAVING NO
0820&5& := TRUE
0830END-IF
0840ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
0850&3& := "?"
0860PERFORM CALLBACK
0870XML_PARSER_II := XML_PARSER_IJ + 1
0880XML_PARSER_NEXT := XML_PARSER_II + 1
0890ESCAPE BOTTOM
0900END-IF
0910END-FOR
0920*
0930IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
0940&6& := 'Processing instruction was not closed. '-
0950'Line %2% Column %3%.'
0960EXAMINE &6& FOR "%1%" REPLACE WITH
0970XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
0980/* calculate the current line
0990XML_PARSER_IK := 1
1000XML_PARSER_IL := XML_PARSER_II
1010FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
1020IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
1030ADD 1 TO XML_PARSER_IK
1040XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
1050END-IF
1060END-FOR
1070XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
1080EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
1090XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
1100EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
1110
1120&7&   := -2
1130PERFORM PARSER_ERROR
1140ESCAPE ROUTINE
1150END-IF
1160ELSE
1170* --------------------------------------------------- Tag is a comment
1180IF XML_PARSER_XML_2ND_CHAR = "!"
1190ADD 2 TO XML_PARSER_II
1200XML_PARSER_TAG_7CHAR := SUBSTR(&1&,XML_PARSER_II)
1210* --------------------------------------------------- Tag is a DOCTYPE
1220IF XML_PARSER_TAG_7CHAR = "DOCTYPE" THEN
1230ADD 1 TO XML_PARSER_XPATH_NAMES_MAX
1240XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) := "!DOCTYPE"
1250XML_PARSER_IS_INLINE_DEFINED := FALSE
1260FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
1270XML_PARSER_CDATA_1CHAR := SUBSTR(&1&,XML_PARSER_IJ,1)
1280IF XML_PARSER_CDATA_1CHAR = "<" THEN
1290XML_PARSER_CDATA_9CHAR := SUBSTR(&1&,XML_PARSER_IJ)
1300IF XML_PARSER_CDATA_9CHAR = "<![CDATA[" THEN
1310FOR XML_PARSER_IK = XML_PARSER_IJ TO XML_PARSER_INPUT_LENGTH
1320XML_PARSER_CDATA_3CHAR := SUBSTR(&1&,XML_PARSER_IK)
1330IF  XML_PARSER_CDATA_3CHAR = "]]>"THEN
1340XML_PARSER_IJ := XML_PARSER_IK + 3
1350ESCAPE BOTTOM
1360END-IF
1370END-FOR
1380IF XML_PARSER_IK > XML_PARSER_INPUT_LENGTH THEN
1390&6& := 'A CDATA section was not closed. Line %2% Column %3%.'
1400EXAMINE &6& FOR "%1%" REPLACE
1410WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
1420/* calculate the current line
1430XML_PARSER_IK := 1
1440XML_PARSER_IL := XML_PARSER_IJ
1450FOR XML_PARSER_II = 1 TO XML_PARSER_IJ
1460IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
1470ADD 1 TO XML_PARSER_IK
1480XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
1490END-IF
1500END-FOR
1510/*
1520XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
1530EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
1540XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
1550EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
1560
1570&7&   := -3
1580PERFORM PARSER_ERROR
1590ESCAPE ROUTINE
1600END-IF
1610END-IF
1620XML_PARSER_CDATA_1CHAR := SUBSTR(&1&,XML_PARSER_IJ,1)
1630END-IF
1640IF XML_PARSER_CDATA_1CHAR = "["
1650AND XML_PARSER_IS_INLINE_DEFINED = FALSE THEN
1660* -------------------------- Tag is a DOCTYPE with internal definition
1670XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) := "!DOCTYPE["
1680XML_PARSER_IS_INLINE_DEFINED := TRUE
1690END-IF
1700IF XML_PARSER_IS_INLINE_DEFINED = TRUE THEN
1710XML_PARSER_TAG_2CHAR := SUBSTR(&1&,XML_PARSER_IJ)
1720IF  XML_PARSER_TAG_2CHAR = "]>"THEN
1730COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
1740INTO &2& WITH DELIMITER "/"
1750XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II + 1
1760IF XML_PARSER_IL > 0 THEN
1770&4& := SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
1780&5& := FALSE
1790ELSE
1800COMPRESS " " INTO &4& LEAVING NO
1810&5& := TRUE
1820END-IF
1830ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
1840&3& := "D"
1850PERFORM CALLBACK
1860XML_PARSER_II := XML_PARSER_IJ + 1
1870XML_PARSER_NEXT := XML_PARSER_II + 1
1880ESCAPE BOTTOM
1890END-IF
1900ELSE
1910IF XML_PARSER_CDATA_1CHAR = ">"  THEN
1920COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
1930INTO &2& WITH DELIMITER "/"
1940XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
1950IF XML_PARSER_IL > 0 THEN
1960&4& := SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
1970&5& := FALSE
1980ELSE
1990COMPRESS " " INTO &4& LEAVING NO
2000&5& := TRUE
2010END-IF
2020ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
2030&3& := "D"
2040PERFORM CALLBACK
2050XML_PARSER_II := XML_PARSER_IJ + 1
2060XML_PARSER_NEXT := XML_PARSER_II + 1
2070ESCAPE BOTTOM
2080END-IF
2090END-IF
2100END-FOR
2110IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
2120&6& := '!DOCTYPE section was not closed. Line %2% Column %3%.'
2130EXAMINE &6& FOR "%1%" REPLACE
2140WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
2150/* calculate the current line
2160XML_PARSER_IK := 1
2170XML_PARSER_IL := XML_PARSER_II
2180FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
2190IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
2200ADD 1 TO XML_PARSER_IK
2210XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
2220END-IF
2230END-FOR
2240/*
2250XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
2260EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
2270XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
2280EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
2290&7&   := -4
2300PERFORM PARSER_ERROR
2310ESCAPE ROUTINE
2320END-IF
2330ELSE
2340/*
2350XML_PARSER_TAG_2CHAR := XML_PARSER_TAG_7CHAR
2360* --------------------------- Tag is a comment over more then one line
2370IF XML_PARSER_TAG_2CHAR = "--" THEN
2380ADD 1 TO XML_PARSER_XPATH_NAMES_MAX
2390XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) := "!--"
2400/*
2410ADD 2 TO XML_PARSER_II
2420FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
2430XML_PARSER_TAG_2CHAR := SUBSTR(&1&,XML_PARSER_IJ)
2440IF  XML_PARSER_TAG_2CHAR = "--"THEN
2450COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
2460INTO &2& WITH DELIMITER "/"
2470XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
2480ADD 2 TO XML_PARSER_IJ
2490IF  SUBSTRING(&1&,XML_PARSER_IJ,1) NE ">" THEN
2500&6& := 'Incorrect syntax was used in a comment. Line %2% Column %3%.'
2510EXAMINE &6& FOR "%1%" REPLACE
2520WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
2530/* calculate the current line
2540XML_PARSER_IK := 1
2550XML_PARSER_IL := XML_PARSER_IJ
2560FOR XML_PARSER_II = 1 TO XML_PARSER_IJ
2570IF SUBSTR(&1&,XML_PARSER_II,1) = XML_PARSER_LF THEN
2580ADD 1 TO XML_PARSER_IK
2590XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
2600END-IF
2610END-FOR
2620/*
2630XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
2640EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
2650XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
2660EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
2670&7&   := -5
2680PERFORM PARSER_ERROR
2690ESCAPE ROUTINE
2700END-IF
2710IF XML_PARSER_IL > 0 THEN
2720&4& := SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
2730&5& := FALSE
2740ELSE
2750COMPRESS " " INTO &4& LEAVING NO
2760&5& := TRUE
2770END-IF
2780ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
2790&3& := "!"
2800PERFORM CALLBACK
2810XML_PARSER_II := XML_PARSER_IJ
2820XML_PARSER_NEXT := XML_PARSER_II + 1
2830ESCAPE BOTTOM
2840END-IF
2850END-FOR
2860IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
2870&6& := 'A Comment was not closed. Line %2% Column %3%.'
2880EXAMINE &6& FOR "%1%" REPLACE
2890WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
2900/* calculate the current line
2910XML_PARSER_IK := 1
2920XML_PARSER_IL := XML_PARSER_II
2930FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
2940IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
2950ADD 1 TO XML_PARSER_IK
2960XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
2970END-IF
2980END-FOR
2990/*
3000XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
3010EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
3020XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
3030EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
3040&7&   := -6
3050PERFORM PARSER_ERROR
3060ESCAPE ROUTINE
3070END-IF
3080ELSE
3090* --------------------------------------------- Tag is a CDATA comment
3100IF XML_PARSER_TAG_7CHAR = "[CDATA[" THEN
3110ADD 1 TO XML_PARSER_XPATH_NAMES_MAX
3120XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) := "![CDATA["
3130/*
3140ADD 7 TO XML_PARSER_II
3150FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
3160XML_PARSER_TAG_3CHAR := SUBSTR(&1&,XML_PARSER_IJ)
3170IF XML_PARSER_TAG_3CHAR = "]]>"THEN
3180COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
3190INTO &2& WITH DELIMITER "/"
3200XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
3210IF XML_PARSER_IL > 0 THEN
3220&4& := SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
3230&5& := FALSE
3240ELSE
3250COMPRESS " " INTO &4& LEAVING NO
3260&5& := TRUE
3270END-IF
3280ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
3290&3& := "C"
3300PERFORM CALLBACK
3310XML_PARSER_II := XML_PARSER_IJ + 2
3320XML_PARSER_NEXT := XML_PARSER_II + 1
3330ESCAPE BOTTOM
3340END-IF
3350END-FOR
3360IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
3370&6& := 'A CDATA section was not closed. Line %2% Column %3%.'
3380EXAMINE &6& FOR "%1%" REPLACE
3390WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
3400/* calculate the current line
3410XML_PARSER_IK := 1
3420XML_PARSER_IL := XML_PARSER_II
3430FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
3440IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
3450ADD 1 TO XML_PARSER_IK
3460XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
3470END-IF
3480END-FOR
3490/*
3500XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
3510EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
3520XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
3530EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
3540&7&   := -7
3550PERFORM PARSER_ERROR
3560ESCAPE ROUTINE
3570END-IF
3580ELSE
3590* ---------------------------------------------- Tag is simple comment
3600ADD 1 TO XML_PARSER_XPATH_NAMES_MAX
3610XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) := "!"
3620FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
3630XML_PARSER_TAG_1CHAR2 := SUBSTR(&1&,XML_PARSER_IJ,1)
3640IF XML_PARSER_TAG_1CHAR2 = ">"THEN
3650COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
3660INTO &2& WITH DELIMITER "/"
3670XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
3680IF XML_PARSER_IL > 0 THEN
3690&4& := SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
3700&5& := FALSE
3710ELSE
3720COMPRESS " " INTO &4& LEAVING NO
3730&5& := TRUE
3740END-IF
3750ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
3760&3& := "!"
3770PERFORM CALLBACK
3780XML_PARSER_II := XML_PARSER_IJ
3790XML_PARSER_NEXT := XML_PARSER_II + 1
3800ESCAPE BOTTOM
3810END-IF
3820END-FOR
3830IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
3840&6& := 'A Comment section was not closed. Line %2% Column %3%.'
3850EXAMINE &6& FOR "%1%" REPLACE
3860WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
3870/* calculate the current line
3880XML_PARSER_IK := 1
3890XML_PARSER_IL := XML_PARSER_II
3900FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
3910IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
3920ADD 1 TO XML_PARSER_IK
3930XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
3940END-IF
3950END-FOR
3960/*
3970XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
3980EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
3990XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
4000EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
4010&7&   := -8
4020PERFORM PARSER_ERROR
4030ESCAPE ROUTINE
4040END-IF
4050END-IF
4060END-IF
4070END-IF
4080ELSE
4090* -------------------------------------------------------- Parsed Data
4100IF XML_PARSER_II GE XML_PARSER_NEXT THEN
4110XML_PARSER_IL := XML_PARSER_II - XML_PARSER_NEXT
4120/*
4130IF XML_PARSER_XPATH_NAMES_MAX > 0 THEN
4140COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX) "$"
4150INTO &2& WITH DELIMITER "/"
4160** ignore
4170ELSE
4180&2& := "$"
4190END-IF
4200IF XML_PARSER_IL > 0 THEN
4210&4& := SUBSTR(&1&,XML_PARSER_NEXT,XML_PARSER_IL)
4220&5& := FALSE
4230&3& :="$"
4240PERFORM CALLBACK
4250ELSE
4260COMPRESS " " INTO &4& LEAVING NO
4270&5& := TRUE
4280END-IF
4290END-IF
4300ADD 1 TO XML_PARSER_II
4310IF XML_PARSER_XML_2ND_CHAR = "/"
4320* ----------------------------------------------- Tag is a end element
4330ADD 1 TO XML_PARSER_II
4340FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
4350XML_PARSER_WHITETEST := SUBSTR(&1&,XML_PARSER_IJ,1)
4360IF XML_PARSER_WHITESPACE = SCAN XML_PARSER_WHITETEST OR
4370SUBSTR(&1&,XML_PARSER_IJ,1) = ">" THEN
4380XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
4390/*
4400IF XML_PARSER_IL LE 0 THEN
4410&6& := 'Closing tag name was started with an invalid character. '-
4420'Line %2% Column %3%.'
4430EXAMINE &6& FOR "%1%" REPLACE
4440WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
4450/* calculate the current line
4460XML_PARSER_IK := 1
4470XML_PARSER_IL := XML_PARSER_II
4480FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
4490IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
4500ADD 1 TO XML_PARSER_IK
4510XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
4520END-IF
4530END-FOR
4540/*
4550XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
4560EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
4570XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
4580EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
4590&7&   := -9
4600PERFORM PARSER_ERROR
4610ESCAPE ROUTINE
4620END-IF
4630IF XML_PARSER_XPATH_NAMES_MAX LE 0 THEN
4640&6& := 'Closing tag without starting element. Line %2% Column %3%.'
4650/* calculate the current line
4660XML_PARSER_IK := 1
4670XML_PARSER_IL := XML_PARSER_II
4680FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
4690IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
4700ADD 1 TO XML_PARSER_IK
4710XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
4720END-IF
4730END-FOR
4740/*
4750XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
4760EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
4770XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
4780EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
4790&7&   := -10
4800PERFORM PARSER_ERROR
4810ESCAPE ROUTINE
4820END-IF
4830/* NAMESPACE !!
4840IF SUBSTRING(&1&,XML_PARSER_II,XML_PARSER_IL)
4850NE XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) THEN
4860&6& := 'Closing tag "%4%" does not match the start tag "%1%". '-
4870'Line %2% Column %3%.'
4880EXAMINE &6& FOR "%1%" REPLACE
4890WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
4900
4910/* NAMESPACE !!
4920XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) :=
4930SUBSTRING(&1&,XML_PARSER_II,XML_PARSER_IL)
4940
4950EXAMINE &6& FOR "%4%" REPLACE
4960WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
4970/* calculate the current line
4980XML_PARSER_IK := 1
4990XML_PARSER_IL := XML_PARSER_II
5000FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
5010IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
5020ADD 1 TO XML_PARSER_IK
5030XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
5040END-IF
5050END-FOR
5060/*
5070XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
5080EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
5090XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
5100EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
5110&7&   := -11
5120PERFORM PARSER_ERROR
5130ESCAPE ROUTINE
5140END-IF
5150COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX) "/"
5160INTO &2& WITH DELIMITER "/"
5170COMPRESS " " INTO &4& LEAVING NO
5180&5& := TRUE
5190&3& := "/"
5200PERFORM CALLBACK
5210ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
5220IF SUBSTR(&1&,XML_PARSER_IJ,1) NE ">" THEN
5230FOR XML_PARSER_IK = XML_PARSER_IJ TO XML_PARSER_INPUT_LENGTH
5240IF  SUBSTRING(&1&,XML_PARSER_IK,1) = ">" THEN
5250XML_PARSER_IJ := XML_PARSER_IK
5260ESCAPE BOTTOM
5270END-IF
5280END-FOR
5290IF XML_PARSER_IK > XML_PARSER_INPUT_LENGTH THEN
5300&6& := 'Closing tag was not closed. Line %2% Column %3%.'
5310/* calculate the current line
5320XML_PARSER_IK := 1
5330XML_PARSER_IL := XML_PARSER_IJ
5340FOR XML_PARSER_II = 1 TO XML_PARSER_IJ
5350IF SUBSTR(&1&,XML_PARSER_II,1) = XML_PARSER_LF THEN
5360ADD 1 TO XML_PARSER_IK
5370XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
5380END-IF
5390END-FOR
5400/*
5410XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
5420EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
5430XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
5440EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
5450&7&   := -12
5460PERFORM PARSER_ERROR
5470ESCAPE ROUTINE
5480END-IF
5490END-IF
5500XML_PARSER_II := XML_PARSER_IJ
5510XML_PARSER_NEXT := XML_PARSER_II + 1
5520ESCAPE BOTTOM
5530END-IF
5540END-FOR
5550IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
5560&6& := 'Closing tag "%1%" was not closed. Line %2% Column %3%.'
5570EXAMINE &6& FOR "%1%" REPLACE
5580WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
5590/* calculate the current line
5600XML_PARSER_IK := 1
5610XML_PARSER_IL := XML_PARSER_II
5620FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
5630IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
5640ADD 1 TO XML_PARSER_IK
5650XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
5660END-IF
5670END-FOR
5680/*
5690XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
5700EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
5710XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
5720EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
5730&7&   := -13
5740PERFORM PARSER_ERROR
5750ESCAPE ROUTINE
5760END-IF
5770ELSE
5780* --------------------------------------------------- Tag is a element
5790ADD 1 TO XML_PARSER_XPATH_NAMES_MAX
5800XML_PARSER_HAS_ATTRIBUTE := FALSE
5810FOR XML_PARSER_IJ = XML_PARSER_II TO XML_PARSER_INPUT_LENGTH
5820XML_PARSER_TAG_1CHAR2 := SUBSTR(&1&,XML_PARSER_IJ,1)
5830IF ( XML_PARSER_WHITESPACE = SCAN XML_PARSER_TAG_1CHAR2 OR
5840XML_PARSER_TAG_1CHAR2 = "/" ) AND
5850XML_PARSER_HAS_ATTRIBUTE = FALSE THEN
5860* --------------------------------------------- Element has attributes
5870XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
5880IF XML_PARSER_IL LE 0 THEN
5890&6& := 'Starting tag name was started with an invalid character. '-
5900'Line %2% Column %3%.'
5910EXAMINE &6& FOR "%1%" REPLACE
5920WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
5930/* calculate the current line
5940XML_PARSER_IK := 1
5950XML_PARSER_IL := XML_PARSER_II
5960FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
5970IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
5980ADD 1 TO XML_PARSER_IK
5990XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
6000END-IF
6010END-FOR
6020/*
6030XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
6040EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
6050XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
6060EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
6070&7&   := -14
6080PERFORM PARSER_ERROR
6090ESCAPE ROUTINE
6100END-IF
6110/* NAMESPACE !!
6120XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) :=
6130SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
6140COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
6150INTO &2& WITH DELIMITER "/"
6160COMPRESS " " INTO &4& LEAVING NO
6170&5& := TRUE
6180&3& := "T"
6190PERFORM CALLBACK
6200XML_PARSER_HAS_ATTRIBUTE := TRUE
6210XML_PARSER_II := XML_PARSER_IJ + 1
6220ELSE
6230IF XML_PARSER_TAG_1CHAR2 = ">" THEN
6240
6250XML_PARSER_IL := XML_PARSER_IJ - XML_PARSER_II
6260ADD -1 TO XML_PARSER_IJ
6270XML_PARSER_TAG_1CHAR2 := SUBSTR(&1&,XML_PARSER_IJ,1)
6280
6290IF XML_PARSER_HAS_ATTRIBUTE = FALSE THEN
6300IF XML_PARSER_IL LE 0 THEN
6310&6& := 'Starting tag name was started with an invalid character. '-
6320'Line %2% Column %3%.'
6330/* calculate the current line
6340XML_PARSER_IK := 1
6350XML_PARSER_IL := XML_PARSER_II
6360FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
6370IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
6380ADD 1 TO XML_PARSER_IK
6390XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
6400END-IF
6410END-FOR
6420/*
6430XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
6440EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
6450XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
6460EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
6470&7&   := -14
6480PERFORM PARSER_ERROR
6490ESCAPE ROUTINE
6500END-IF
6510/* NAMESPACE !!
6520XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX) :=
6530SUBSTR(&1&,XML_PARSER_II,XML_PARSER_IL)
6540COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX)
6550INTO &2& WITH DELIMITER "/"
6560
6570COMPRESS " " INTO &4& LEAVING NO
6580&5& := TRUE
6590&3& :="T"
6600PERFORM CALLBACK
6610ELSE
6620IF XML_PARSER_TAG_1CHAR2 = "/" THEN
6630ADD -1 TO XML_PARSER_IL
6640END-IF
6650* ------------------------------------------------- Process Attributes
6660REPEAT WHILE XML_PARSER_II <= XML_PARSER_IJ
6670REPEAT WHILE XML_PARSER_II <= XML_PARSER_IJ
6680XML_PARSER_WHITETEST := SUBSTR(&1&,XML_PARSER_II,1)
6690IF XML_PARSER_WHITESPACE NE SCAN XML_PARSER_WHITETEST THEN
6700XML_PARSER_NEXT_ATTRIBUTE := XML_PARSER_II
6710ADD 1 TO XML_PARSER_II
6720ESCAPE BOTTOM
6730END-IF
6740ADD 1 TO XML_PARSER_II
6750END-REPEAT
6760IF XML_PARSER_II > XML_PARSER_IJ THEN
6770ESCAPE BOTTOM
6780END-IF
6790REPEAT WHILE XML_PARSER_II <= XML_PARSER_IJ
6800IF SUBSTRING(&1&,XML_PARSER_II,1) = "=" THEN
6810ESCAPE BOTTOM
6820END-IF
6830ADD 1 TO XML_PARSER_II
6840END-REPEAT
6850* ----------------------------------------------- Attribute name found
6860XML_PARSER_IL := XML_PARSER_II - XML_PARSER_NEXT_ATTRIBUTE
6870&2& := SUBSTR(&1&,XML_PARSER_NEXT_ATTRIBUTE,XML_PARSER_IL)
6880IF &2& = " " THEN
6890&6& := 'Attribut name of tag "%1%" not found. Line %2% Column %3%.'
6900EXAMINE &6& FOR "%1%" REPLACE
6910WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
6920/* calculate the current line
6930XML_PARSER_IK := 1
6940XML_PARSER_IL := XML_PARSER_NEXT_ATTRIBUTE
6950FOR XML_PARSER_IJ = 1 TO XML_PARSER_NEXT_ATTRIBUTE
6960IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
6970ADD 1 TO XML_PARSER_IK
6980XML_PARSER_IL := XML_PARSER_NEXT_ATTRIBUTE - XML_PARSER_IJ
6990END-IF
7000END-FOR
7010/*
7020XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
7030EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
7040XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
7050EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
7060&7&   := -15
7070PERFORM PARSER_ERROR
7080ESCAPE ROUTINE
7090END-IF
7100COMPRESS XML_PARSER_ATSIGN &2& INTO &2& LEAVING NO
7110COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX) &2&
7120INTO &2& WITH DELIMITER "/"
7130* ---------------------------------------------- SEARCH start OF VALUE
7140REPEAT WHILE XML_PARSER_II <= XML_PARSER_IJ
7150IF SUBSTRING(&1&,XML_PARSER_II,1) = XML_PARSER_APOSTROPHE OR
7160SUBSTRING(&1&,XML_PARSER_II,1) = XML_PARSER_QUOT_MARK THEN
7170XML_PARSER_ATTRIBUTE_DELIMITER := SUBSTRING(&1&,XML_PARSER_II,1)
7180ADD 1 TO XML_PARSER_II
7190XML_PARSER_IL := XML_PARSER_II
7200ESCAPE BOTTOM
7210END-IF
7220ADD 1 TO XML_PARSER_II
7230END-REPEAT
7240IF XML_PARSER_II > XML_PARSER_IJ THEN
7250&6& := 'Attribut name of tag "%1%" contains an invalid character. '-
7260'Line %2% Column %3%.'
7270EXAMINE &6& FOR "%1%" REPLACE
7280WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
7290/* calculate the current line
7300XML_PARSER_IK := 1
7310XML_PARSER_IL := XML_PARSER_II
7320FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
7330IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
7340ADD 1 TO XML_PARSER_IK
7350XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
7360END-IF
7370END-FOR
7380/*
7390COMPRESS XML_PARSER_IK INTO XML_PARSER_CDATA_9CHAR
7400EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
7410XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
7420EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
7430&7&   := -16
7440PERFORM PARSER_ERROR
7450ESCAPE ROUTINE
7460END-IF
7470* ------------------------------------------------ SEARCH END OF VALUE
7480REPEAT WHILE XML_PARSER_II <= XML_PARSER_IJ
7490IF SUBSTRING(&1&,XML_PARSER_II,1) = XML_PARSER_ATTRIBUTE_DELIMITER THEN
7500XML_PARSER_IK := XML_PARSER_II - XML_PARSER_IL
7510IF XML_PARSER_IK > 0 THEN
7520&4& := SUBSTRING(&1&,XML_PARSER_IL,XML_PARSER_IK)
7530&5& := FALSE
7540ELSE
7550COMPRESS " " INTO &4& LEAVING NO
7560&5& := TRUE
7570END-IF
7580&3& := XML_PARSER_ATSIGN
7590PERFORM CALLBACK
7600ADD 1 TO XML_PARSER_II
7610XML_PARSER_NEXT_ATTRIBUTE := XML_PARSER_II
7620ESCAPE BOTTOM
7630END-IF
7640ADD 1 TO XML_PARSER_II
7650END-REPEAT
7660IF XML_PARSER_II NE XML_PARSER_NEXT_ATTRIBUTE
7670AND XML_PARSER_II > XML_PARSER_IJ THEN
7680IF XML_PARSER_ATTRIBUTE_DELIMITER = XML_PARSER_QUOT_MARK THEN
7690&6& := 'Attribut value of tag "%1%" ending quotation mark missing. '-
7700'Line %2% Column %3%.'
7710EXAMINE &6& FOR "%1%" REPLACE
7720WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
7730/* calculate the current line
7740XML_PARSER_IK := 1
7750XML_PARSER_IL := XML_PARSER_II
7760FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
7770IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
7780ADD 1 TO XML_PARSER_IK
7790XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
7800END-IF
7810END-FOR
7820/*
7830XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
7840EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
7850XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
7860EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
7870&7&   := -17
7880PERFORM PARSER_ERROR
7890ESCAPE ROUTINE
7900ELSE
7910&6& := 'Attribut value of tag "%1%" ending apostrophe missing. '-
7920'Line %2% Column %3%.'
7930EXAMINE &6& FOR "%1%" REPLACE
7940WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
7950/* calculate the current line
7960XML_PARSER_IK := 1
7970XML_PARSER_IL := XML_PARSER_NEXT_ATTRIBUTE
7980FOR XML_PARSER_II = 1 TO XML_PARSER_NEXT_ATTRIBUTE
7990IF SUBSTR(&1&,XML_PARSER_II,1) = XML_PARSER_LF THEN
8000ADD 1 TO XML_PARSER_IK
8010XML_PARSER_IL := XML_PARSER_NEXT_ATTRIBUTE - XML_PARSER_II
8020END-IF
8030END-FOR
8040/*
8050XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
8060EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
8070XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
8080EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
8090&7&   := -18
8100PERFORM PARSER_ERROR
8110ESCAPE ROUTINE
8120END-IF
8130END-IF
8140END-REPEAT
8150END-IF
8160* --------------------------------------------- Tag is a empty element
8170IF XML_PARSER_TAG_1CHAR2 = "/" THEN
8180/* compress XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX) "$"
8190/* into &2& with delimiter "/"
8200/* COMPRESS " " INTO &4& LEAVING NO
8210/* &5& := TRUE
8220/* &3& := "$"
8230/* PERFORM CALLBACK
8240COMPRESS XML_PARSER_XPATH_NAMES(1:XML_PARSER_XPATH_NAMES_MAX) "/"
8250INTO &2& WITH DELIMITER "/"
8260COMPRESS " " INTO &4& LEAVING NO
8270&5& := TRUE
8280&3& := "/"
8290PERFORM CALLBACK
8300ADD -1 TO XML_PARSER_XPATH_NAMES_MAX
8310END-IF
8320XML_PARSER_II := XML_PARSER_IJ + 1
8330XML_PARSER_NEXT := XML_PARSER_II + 1
8340ESCAPE BOTTOM
8350END-IF
8360END-IF
8370END-FOR
8380IF XML_PARSER_IJ > XML_PARSER_INPUT_LENGTH THEN
8390&6& := 'Starting tag section was not closed. Line %2% Column %3%.'
8400EXAMINE &6& FOR "%1%" REPLACE
8410WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
8420/* calculate the current line
8430XML_PARSER_IK := 1
8440XML_PARSER_IL := XML_PARSER_II
8450FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
8460IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
8470ADD 1 TO XML_PARSER_IK
8480XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
8490END-IF
8500END-FOR
8510/*
8520XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
8530EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
8540XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
8550EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
8560&7&   := -19
8570PERFORM PARSER_ERROR
8580ESCAPE ROUTINE
8590END-IF
8600END-IF
8610END-IF
8620END-IF
8630* ------------------------------------------------- User Defined Error
8640IF &7& NE 0 THEN
8650IF &7& <= -9000 THEN
8660EXAMINE &6& FOR "%1%" REPLACE WITH &2&
8670/* calculate the current line
8680XML_PARSER_IK := 1
8690XML_PARSER_IL := XML_PARSER_II
8700FOR XML_PARSER_IJ = 1 TO XML_PARSER_II
8710IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
8720ADD 1 TO XML_PARSER_IK
8730XML_PARSER_IL := XML_PARSER_II - XML_PARSER_IJ
8740END-IF
8750END-FOR
8760/*
8770XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
8780EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
8790XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
8800EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
8810PERFORM PARSER_ERROR
8820END-IF
8830ESCAPE ROUTINE
8840END-IF
8850NONE
8860IGNORE
8870END-DECIDE
8880
8890END-FOR
8900* ------------------------------------- None whitespace after last tag?
8910IF XML_PARSER_NEXT < XML_PARSER_INPUT_LENGTH
8920&4& := SUBSTRING(&1&,XML_PARSER_NEXT)
8930EXAMINE &4& FOR XML_PARSER_CR DELETE
8940EXAMINE &4& FOR XML_PARSER_LF DELETE
8950EXAMINE &4& FOR H'09' DELETE
8960IF &4& NE " " THEN
8970&6& := 'None white space character found after last tag. '-
8980'Line %2% Column %3%.'
8990/* calculate the current line
9000XML_PARSER_IK := 1
9010XML_PARSER_IL := XML_PARSER_NEXT
9020FOR XML_PARSER_IJ = 1 TO XML_PARSER_NEXT
9030IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
9040ADD 1 TO XML_PARSER_IK
9050XML_PARSER_IL := XML_PARSER_NEXT - XML_PARSER_IJ
9060END-IF
9070END-FOR
9080/*
9090XML_PARSER_CDATA_9CHAR := XML_PARSER_IK
9100EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
9110XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
9120EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
9130&7&   := -31
9140PERFORM PARSER_ERROR
9150ESCAPE ROUTINE
9160END-IF
9170END-IF
9180* ----------------------------------------------- All elements closed?
9190IF XML_PARSER_XPATH_NAMES_MAX > 0 THEN
9200&6& := 'Tag "%1%" section was not closed. Line %2% Column %3%.'
9210EXAMINE &6& FOR "%1%" REPLACE
9220WITH XML_PARSER_XPATH_NAMES(XML_PARSER_XPATH_NAMES_MAX)
9230/* calculate the current line
9240XML_PARSER_IK := 1
9250XML_PARSER_IL := XML_PARSER_INPUT_LENGTH
9260FOR XML_PARSER_IJ = 1 TO XML_PARSER_INPUT_LENGTH
9270IF SUBSTR(&1&,XML_PARSER_IJ,1) = XML_PARSER_LF THEN
9280ADD 1 TO XML_PARSER_IK
9290XML_PARSER_IL := XML_PARSER_INPUT_LENGTH - XML_PARSER_IJ
9300END-IF
9310END-FOR
9320/*
9330XML_PARSER_CDATA_9CHAR := XML_PARSER_INPUT_LENGTH
9340EXAMINE &6& FOR "%2%" REPLACE WITH XML_PARSER_CDATA_9CHAR
9350XML_PARSER_CDATA_9CHAR := XML_PARSER_IL
9360EXAMINE &6& FOR "%3%" REPLACE WITH XML_PARSER_CDATA_9CHAR
9370&7&   := -20
9380PERFORM PARSER_ERROR
9390ESCAPE ROUTINE
9400ELSE
9410&6& := 'Parse ended without errors.'
9420&7&   := 0
9430END-IF
9440ELSE
9450&6& := 'Wrong chararter set/Document does not start with "<".'
9460&7&   := -1
9470PERFORM PARSER_ERROR
9480ESCAPE ROUTINE
9490END-IF
