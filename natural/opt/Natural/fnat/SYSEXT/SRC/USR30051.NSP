0010**     Example program for USR3005N
0020**     This program shows, how data can be retrieved from Predict.
0030**     It searches all Adabas files having a name which starts with
0040**     EMP and returns several attributes.
0050**
0060DEFINE DATA LOCAL
00701 REQUEST-RESULT(A) DYNAMIC
0080*
0090LOCAL USING PARSER-X                /* Local Data Area is located
0100                                    /* in Library SYSEXXT
0110LOCAL
01201 XML_PARSER_XPATH             (A) DYNAMIC
01301 XML_PARSER_XPATH_TYPE        (A1)
01401 XML_PARSER_CONTENT           (A) DYNAMIC
01501 XML_PARSER_CONTENT_IS_EMPTY  (L)
01601 XML_PARSER_ERROR_TEXT        (A253)
01701 XML_PARSER_RESPONSE          (I2)
01801 #XNAME (A) DYNAMIC
01901 #XVALUE (A) DYNAMIC
02001 #OLD-XNAME (A) DYNAMIC
02101 #STRUCT-XNAME (A) DYNAMIC
0220*
02301 #MSG-NR(I4)
02401 #MSG-TEXT(A79)
02501 #MSG-TYPE(A8)
0260END-DEFINE
0270PRINT 'Example program' *PROGRAM 'for USR3005N'
0280/     'This program shows, how data can be retrieved from Predict.'
0290/     'It searches all Adabas files having a name which starts with'
0300/     'EMP and returns several attributes.'
0310/
0320COMPRESS
0330'<Predict>'
0340  '<Request>'
0350    '<Select>'
0360**
0370** Search Adabas-File having a name which starts with EMP
0380**
0390      '<Search>'
0400        '<Object-type value=''FILE-A''/>'
0410        '<Attribute name=''ID'' value=''EMP*''/>'
0420      '</Search>'
0430**
0440** Return the following attributes
0450**
0460      '<Return>'
0470        '<Field name=''ID''/>'
0480        '<Field name=''CREATED-ON''/>'
0490        '<Field name=''CREATED-BY''/>'
0500        '<Field name=''CHANGED-ON''/>'
0510        '<Field name=''CHANGED-BY''/>'
0520        '<Field name=''FIELDS-CHANGED-ON''/>'
0530        '<Field name=''FIELDS-CHANGED-BY''/>'
0540        '<Field name=''ABSTRACT''/>'
0550        '<Field name=''DESCRIPTION''/>'
0560        '<Field name=''LITERAL-NAME''/>'
0570        '<Field name=''AVERAGE-COUNT''/>'
0580        '<Field name=''STABILITY-FLAG''/>'
0590        '<Field name=''FILE-NUMBER''/>'
0600        '<Field name=''LOGICAL-DISTRIBUTION-TYPE''/>'
0610        '<Field name=''VISTA-ACCESS-DBNR''/>'
0620        '<Field name=''VISTA-ACCESS-FNR''/>'
0630        '<Field name=''ADABAS-SQL-USAGE''/>'
0640        '<Field name=''SEQUENCE-FIELD''/>'
0650      '</Return>'
0660    '</Select>'
0670  '</Request>'
0680'</Predict>'
0690*
0700TO REQUEST-RESULT
0710*
0720PRINT 'Request passed to USR3005N'
0730PRINT REQUEST-RESULT
0740*
0750CALLNAT 'USR3005N' REQUEST-RESULT
0760*
0770PRINT 'Result returned from USR3005N'
0780*
0790INCLUDE PARSER_X                    /* Copy Code is located
0800                                    /* in Library SYSEXXT
0810                                    /*
0820  'REQUEST-RESULT'                  /* XML FILE TO BE PARSED
0830  'XML_PARSER_XPATH'                /* XPATH TO REPESENT ELEMENT...
0840  'XML_PARSER_XPATH_TYPE'           /* TYPE OF CALLBACK
0850  'XML_PARSER_CONTENT'              /* CONTENT OF FOUND ELEMENT
0860  'XML_PARSER_CONTENT_IS_EMPTY'     /* IS TRUE IF ELEMENT IS EMPTY
0870  'XML_PARSER_ERROR_TEXT'           /* ERROR MESSAGE
0880  'XML_PARSER_RESPONSE'             /* ERROR NR; 0 = OK
0890*
0900DEFINE SUBROUTINE CALLBACK
0910*
0920EXAMINE XML_PARSER_XPATH TRANSLATE INTO UPPER
0930IF XML_PARSER_XPATH_TYPE = '/'
0940AND #STRUCT-XNAME NE ' '
0950**
0960** Last Structure is closed
0970**
0980  RESET #STRUCT-XNAME
0990END-IF
1000DECIDE ON FIRST VALUE OF XML_PARSER_XPATH
1010*
1020  VALUE 'PREDICT/RESULT/MESSAGE/?NUMBER'
1030    #MSG-NR := VAL(XML_PARSER_CONTENT)
1040*
1050  VALUE 'PREDICT/RESULT/MESSAGE/?TEXT'
1060    INCLUDE USR3005Y '''2''' 'XML_PARSER_CONTENT' '#MSG-TEXT'
1070**
1080** With PRCCNVCH
1090** the coded special characters in XML_PARSER_CONTENT are translated
1100** into the printable form
1110**
1120*
1130  VALUE 'PREDICT/RESULT/MESSAGE/?TYPE'
1140    #MSG-TYPE := XML_PARSER_CONTENT
1150    EXAMINE #MSG-TYPE TRANSLATE INTO UPPER
1160    IF #MSG-TYPE NE 'SUCCESS'
1170**
1180** Possible Values of ?TYPE are SUCCESS, ERROR and WARNING
1190**
1200      PRINT #MSG-NR
1210      PRINT #MSG-TEXT
1220    END-IF
1230*
1240  VALUE 'PREDICT/RESULT/ROW'
1250**
1260** New Object starts here
1270**
1280    RESET #STRUCT-XNAME  #OLD-XNAME
1290    PRINT ' '
1300*
1310  VALUE 'PREDICT/RESULT/ROW/STRUCTURE/?NAME'
1320**
1330** New Structure name found
1340**
1350    #STRUCT-XNAME := XML_PARSER_CONTENT
1360    PRINT #STRUCT-XNAME
1370*
1380  VALUE 'PREDICT/RESULT/ROW/STRUCTURE/ATTRIBUTE/?NAME'
1390**
1400** Attribute name within a Structure found
1410**
1420    #XNAME := XML_PARSER_CONTENT
1430    IF #OLD-XNAME NE #XNAME
1440      IF #STRUCT-XNAME = ' '
1450        PRINT #XNAME
1460      END-IF
1470      #OLD-XNAME := #XNAME
1480    END-IF
1490*
1500  VALUE 'PREDICT/RESULT/ROW/STRUCTURE/ATTRIBUTE/?VALUE'
1510**
1520** Attribute value within a Structure found
1530**
1540    INCLUDE USR3005Y '''2''' 'XML_PARSER_CONTENT' '#XVALUE'
1550**
1560** With PRCCNVCH
1570** the coded special characters in XML_PARSER_CONTENT are translated
1580** into the printable form
1590**
1600    PRINT #XVALUE
1610*
1620  VALUE 'PREDICT/RESULT/ROW/ATTRIBUTE/?NAME'
1630**
1640** Attribute name outside of Structure found
1650**
1660    #XNAME := XML_PARSER_CONTENT
1670*
1680  VALUE 'PREDICT/RESULT/ROW/ATTRIBUTE/?VALUE'
1690**
1700** Attribute value outside a Structure found
1710**
1720    INCLUDE USR3005Y '''2''' 'XML_PARSER_CONTENT' '#XVALUE'
1730**
1740** With PRCCNVCH
1750** the coded special characters in XML_PARSER_CONTENT are translated
1760** into the printable form
1770**
1780    PRINT #XNAME ':' #XVALUE
1790*
1800  NONE IGNORE
1810*
1820END-DECIDE
1830END-SUBROUTINE /* CALLBACK
1840*
1850DEFINE SUBROUTINE PARSER_ERROR
1860   PRINT 'Parser Error'
1870   PRINT XML_PARSER_ERROR_TEXT
1880 END-SUBROUTINE
1890*
1900END
