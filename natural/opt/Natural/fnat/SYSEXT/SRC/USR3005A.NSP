0010**  Example program for USR3005N
0020**  This program shows, how data can be added to Predict.
0030**  It updates the program list of a system.
0040**
0050DEFINE DATA LOCAL
00601 REQUEST-RESULT(A) DYNAMIC
00701 UPD-STATEMENT(A) DYNAMIC
0080*
0090LOCAL USING PARSER-X                /* Local Data Area is located
0100                                    /* in Library SYSEXXT
0110LOCAL
01201 XML_PARSER_XPATH             (A) DYNAMIC
01301 XML_PARSER_XPATH_TYPE        (A1)
01401 XML_PARSER_CONTENT           (A) DYNAMIC
01501 XML_PARSER_CONTENT_IS_EMPTY  (L)
01601 XML_PARSER_ERROR_TEXT        (A253)
01701 XML_PARSER_RESPONSE          (I2)
01801 #XNAME (A) DYNAMIC
01901 #XVALUE (A) DYNAMIC
02001 #MSG-NR(I4)
02101 #MSG-TEXT(A79)
02201 #MSG-TYPE(A8)
02301 #ADDITIONAL-MSG-NR(I4)
02401 #ADDITIONAL-MSG-TEXT(A79)
02501 #INVALID-ATTRIBUTE(A32)
02601 #INDEX-IN-INVALID-ATTRIBUTE(I4)
02701 #COMPOSE-STATEMENT (L)
0280END-DEFINE
0290PRINT 'Example program' *PROGRAM 'for USR3005N'
0300/     'This program shows, how data can be added to Predict.'
0310/     'It updates the program list of a system.'
0320/
0330**
0340** First lock the object to be updated
0350**
0360COMPRESS
0370'<Predict>'
0380  '<Request>'
0390    '<Lock>'
0400      '<Search>'
0410         '<Object-type value=''SYSTEM-C''/>'
0420         '<Attribute name=''ID'' value=''SAG-PRD-OTHER-PGMS''/>'
0430      '</Search>'
0440    '</Lock>'
0450  '</Request>'
0460'</Predict>'
0470**
0480TO REQUEST-RESULT
0490*
0500PERFORM CALL-USR3005N
0510*
0520IF #MSG-TYPE NE 'SUCCESS'
0530  ESCAPE ROUTINE
0540END-IF
0550**
0560** Now update the link list of system SAG-PRD-OTHER-PGMS
0570**
0580COMPRESS
0590'<Predict>'
0600  '<Request>'
0610    '<Update>'
0620      '<Search>'
0630        '<Link source-object-type=''SYSTEM-C'' association=''PROGRAM'''
0640                 'direction=''ACTIVE''/>'
0650        '<Attribute name=''SOURCE-OBJECT'''
0660                   'value=''SAG-PRD-OTHER-PGMS''/>'
0670      '</Search>'
0680      '<Set>'
0690        '<Row>'
0700          '<Attribute Name=''TARGET-OBJECT'''
0710                     'Value=''SAG-PRD-SUMPRDEX'' />'
0720        '</Row>'
0730        '<Row>'
0740          '<Attribute Name=''TARGET-OBJECT'''
0750          'Value=''SAG-ADABAS'' />'
0760        '</Row>'
0770      '</Set>'
0780    '</Update>'
0790  '</Request>'
0800'</Predict>'
0810*
0820TO REQUEST-RESULT
0830*
0840PERFORM CALL-USR3005N
0850**
0860** Now unlock the updated object
0870**
0880COMPRESS
0890'<Predict>'
0900  '<Request>'
0910    '<Unlock>'
0920      '<Search>'
0930         '<Object-type value=''SYSTEM-C''/>'
0940         '<Attribute name=''ID'' value=''SAG-PRD-OTHER-PGMS''/>'
0950      '</Search>'
0960    '</Unlock>'
0970  '</Request>'
0980'</Predict>'
0990**
1000TO REQUEST-RESULT
1010*
1020PERFORM CALL-USR3005N
1030*
1040DEFINE SUBROUTINE CALL-USR3005N
1050*
1060PRINT 'Request passed to USR3005N' /
1070PRINT REQUEST-RESULT
1080*
1090CALLNAT 'USR3005N' REQUEST-RESULT
1100*
1110PRINT / 'Result returned from USR3005N' /
1120*
1130INCLUDE PARSER_X                    /* Copy Code is located
1140                                    /* in Library SYSEXXT
1150                                    /*
1160  'REQUEST-RESULT'                  /* XML FILE TO BE PARSED
1170  'XML_PARSER_XPATH'                /* XPATH TO REPESENT ELEMENT...
1180  'XML_PARSER_XPATH_TYPE'           /* TYPE OF CALLBACK
1190  'XML_PARSER_CONTENT'              /* CONTENT OF FOUND ELEMENT
1200  'XML_PARSER_CONTENT_IS_EMPTY'     /* IS TRUE IF ELEMENT IS EMPTY
1210  'XML_PARSER_ERROR_TEXT'           /* ERROR MESSAGE
1220  'XML_PARSER_RESPONSE'             /* ERROR NR; 0 = OK
1230END-SUBROUTINE
1240*
1250DEFINE SUBROUTINE CALLBACK
1260*
1270EXAMINE XML_PARSER_XPATH TRANSLATE INTO UPPER
1280DECIDE ON FIRST VALUE OF XML_PARSER_XPATH
1290*
1300  VALUE 'PREDICT/RESULT/MESSAGE/?NUMBER'
1310    #MSG-NR := VAL(XML_PARSER_CONTENT)
1320*
1330  VALUE 'PREDICT/RESULT/MESSAGE/?TEXT'
1340    INCLUDE USR3005Y '''2''' 'XML_PARSER_CONTENT' '#MSG-TEXT'
1350*
1360  VALUE 'PREDICT/RESULT/MESSAGE/?TYPE'
1370    #MSG-TYPE := XML_PARSER_CONTENT
1380    EXAMINE #MSG-TYPE TRANSLATE INTO UPPER
1390    IF #MSG-TYPE NE 'SUCCESS'
1400**
1410** Possible Values of ?TYPE are SUCCESS, ERROR and WARNING
1420**
1430      PRINT #MSG-NR
1440      PRINT #MSG-TEXT
1450    END-IF
1460  VALUE 'PREDICT/RESULT/MESSAGE/?ADDITIONAL-MSG-NUMBER'
1470    #ADDITIONAL-MSG-NR := VAL(XML_PARSER_CONTENT)
1480*
1490  VALUE 'PREDICT/RESULT/MESSAGE/?ADDITIONAL-MSG-TEXT'
1500    INCLUDE USR3005Y '''2''' 'XML_PARSER_CONTENT' '#ADDITIONAL-MSG-TEXT'
1510    PRINT #ADDITIONAL-MSG-NR
1520    PRINT #ADDITIONAL-MSG-TEXT
1530  VALUE 'PREDICT/RESULT/MESSAGE/?INVALID-ATTRIBUTE'
1540    INCLUDE USR3005Y '''2''' 'XML_PARSER_CONTENT' '#INVALID-ATTRIBUTE'
1550    PRINT #INVALID-ATTRIBUTE 'is invalid'
1560  VALUE 'PREDICT/RESULT/MESSAGE/?INDEX-IN-INVALID-ATTRIBUTE'
1570    #INDEX-IN-INVALID-ATTRIBUTE := VAL(XML_PARSER_CONTENT)
1580    PRINT 'Occurrence' #INDEX-IN-INVALID-ATTRIBUTE
1590    'of' #INVALID-ATTRIBUTE 'is invalid'
1600*
1610*
1620  NONE IGNORE
1630*
1640END-DECIDE
1650END-SUBROUTINE /* CALLBACK
1660*
1670DEFINE SUBROUTINE PARSER_ERROR
1680   PRINT 'Parser Error'
1690   PRINT XML_PARSER_ERROR_TEXT
1700 END-SUBROUTINE
1710*
1720END
