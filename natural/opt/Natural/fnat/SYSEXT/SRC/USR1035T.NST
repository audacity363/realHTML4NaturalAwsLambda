0010Maintain objects using the Software AG editor engine
0020.
0030Documentation ......... USR1035T    /*  Text object
0040Interface ............. USR1035N    /*  Cataloged subprogram
0050Example Program ....... USR1035P    /*  Source program
0060.
0070Product Code .......... NAT
0080.
0090Category .............. EDITOR
0100.
0110Keywords .............. +MOD-NAT-8.4.1, +PREVIOUS-VERSION,
0120                        BUFFER, EDITOR, SAG EDITOR, SOURCE
0130.
0140Interface Versions .... USR1035N, USR2014N
0150.
0160Function .............. Maintain the sources of Natural objects that
0170                        can be edited with the program editor (programs,
0180                        subprograms, subroutines, helproutines,
0190                        copycode, text, class, function).
0200                        These sources are maintained in the Natural
0210                        source area.
0220                        But maintain also non-Natural objects in the
0230                        data buffer.
0240.
0250.
0260INTRODUCTION
0270------------
0280
0290The interface USR1035N makes it possible for you to create your own
0300editor interface or to edit objects 'behind the scenes' without
0310displaying the object. The edit functions available are almost the same
0320as those provided by the Natural for UNIX program editor. The interface
0330can be called from any Natural program.
0340
0350Interface USR1035N applies the Software AG editor engine, a data
0360administration tool without an interactive interface. Using special
0370editor calls, you can use the editor engine to create your own
0380editor interface.
0390
0400
0410Buffer Selection
0420----------------
0430
0440To make changes to an object, the object must first be read into a
0450buffer. A buffer consists of storage space and its associated data
0460adminstration routines. If the object to be modified is a Natural
0470object, the Natural source area is used. If, however, the
0480object is not a Natural object, the Natural data buffer
0490is used. The user specifies in an interface parameter which
0500buffer is to be used to store the data.
0510
0520The Data Buffer
0530---------------
0540
0550As mentioned above, if an object is not a Natural source, it can be
0560read into the Natural data buffer instead of the Natural source
0570area and then be modified there.
0580
0590When the data buffer is opened, it is empty. The user is
0600responsible for reading data into the buffer and writing it from the
0610buffer. Up to 50 data buffers can be used in parallel.
0620The maximum number of data buffers which can be used at one
0630time depends on the following factors:
0640
0650- the SSIZE,
0660- the size of the editor buffer pool, and
0670- the editor work files.
0680
0690Editor and Line Commands
0700------------------------
0710
0720Virtually all editor commands and line commands can be performed
0730on the buffer contents. Each command is listed at the end of this
0740document. A full description of these commands is provided in the
0750Natural Software AG Editor documentation.
0760
0770REQUESTS
0780--------
0790
0800To access Natural sources, a method must be provided to access and
0810manipulate data in the Natural source area or in the data buffer
0820(for example, display it or update it).
0830
0840All operations performed on the buffer are performed via requests.
0850The primary task of requests is to simplify the procedure of
0860displaying buffer contents to screen.
0870
0880For example, the GETS (get screen) request delivers part of the
0890contents of a buffer to the screen. It is possible to specify the
0900line length and number of lines to be delivered for each GETS
0910request. The editor converts the internal buffer format into
0920the desired output format. The lines delivered to screen can be
0930modified and these modifications returned to the buffer using an
0940UPDT (update) request.
0950
0960These functions can be viewed as a frame within the editor buffer.
0970This frame can also be positioned within the buffer, using various
0980requests. See figure below:
0990
1000               +-----------+
1010               |           |
1020               |           |
1030               |           |
1040 Top line ---> |-----+     |   GETS   +-----+
1050               |abcde|     |   ---->  |abcde|
1060               |     |     |          |     |
1070 Screen -----> |     |     |   UPDT   |     |
1080               |wxyz |     |   <----  |wxyz |
1090               |-----+     |          +-----+
1100               |           |          Screen
1110               |           |
1120               |           |
1130               |           |
1140               |  Buffer   |
1150               +-----------+
1160
1170Request Listing
1180---------------
1190
1200The following list contains the abbreviation of each request
1210along with a short description of what the request is used for.
1220
1230OPEN  -  Opens buffer.
1240         See example OPEN-SESSION in USR1035P
1250STAT  -  Gets the status of a buffer
1260         See example OPEN-STATUS in USR1035P
1270GETS  -  Gets screen. Reads data for output to screen.
1280         See example GET-SCREEN in USR1035P
1290UPDT  -  Updates screen. Updates buffer with data read from a modified
1300         screen.
1310         See example UPDATE-SCREEN in USR1035P
1320CLSS  -  Closes buffer.
1330         See example CLOSE-SESSION in USR1035P
1340GETL  -  Gets lines.
1350         See example GET-LINES in USR1035P
1360ADDL  -  Adds lines.
1370         See example ADD-LINES in USR1035P
1380UPDL  -  Updates lines.
1390         See example UPDATE-LINES in USR1035P
1400DELL  -  Deletes lines.
1410         See example DELETE-LINES in USR1035P
1420CSES  -  Copies one buffer into another.
1430         See example COPY-SESSION in USR1035P
1440
1450Request Parameters
1460------------------
1470
1480Each request requires several parameter values that
1490contain information about the request. Listed below are
1500the parameters required for each request.
1510
1520OPEN  -  Opens buffer.
1530
1540   Parameter   Input/
1550   Name        Output   Description
1560   ---------   ------   -----------
1570   ED-SESNUM     I/O    Number of session (0-50). If you enter 0, an
1580                        unused session number is returned by the
1590                        subprogram.
1600   ED-LOGFLAG    I      Logical name in use.
1610   ED-LOGNAME    I      Logical name of the session.
1620   ED-DSTYPE     I      Buffer type (Natural source area or data buffer)
1630   ED-RECLEN     I/O    Line length of data sets in buffer.
1640   ED-SCRMAX     I      Maximum number of lines on screen.
1650   ED-SCRNUM     I/O    Number of lines on screen.
1660   ED-SCRLEN     I      Length of a single line on screen.
1670   ED-PRFLEN     I      Length of a prefix line on screen.
1680   ED-RENUM      I      Unused.
1690
1700STAT  -  Get status of a buffer.
1710
1720   Parameter   Input/
1730   Name        Output   Description
1740   ---------   ------   -----------
1750   ED-SESNUM     I      Number of session (1-50).
1760
1770GETS  -  Gets screen. Reads data for output to screen.
1780
1790   Parameter   Input/
1800   Name        Output   Description
1810   ---------   ------   -----------
1820   ED-SESNUM     I      Number of session (1-50).
1830   ED-SCRNUM     I/O    Number of lines on screen.
1840   ED-SCRLEN     I      Length of a single line on screen.
1850   ED-PRFLEN     I      Length of a prefix line on screen.
1860
1870UPDT  -  Updates screen. Updates buffer with data read from a modified
1880         screen.
1890
1900   Parameter   Input/
1910   Name        Output   Description
1920   ---------   ------   -----------
1930   ED-SESNUM     I      Number of session (1-50).
1940   ED-SCRNUM     I/O    Number of lines on screen.
1950   ED-SCRLEN     I      Length of a single line on screen.
1960   ED-PRFLEN     I      Length of a prefix line on screen.
1970   ED-MCMND      I      Main command for editor operations.
1980   ED-SCMND      I      Secondary command area for main commands
1990
2000CLSS  -  Closes a buffer.
2010
2020   Parameter   Input/
2030   Name        Output   Description
2040   ---------   ------   -----------
2050   ED-SESNUM     I      Number of session (1-50).
2060
2070GETL  -  Gets lines.
2080
2090   Parameter   Input/
2100   Name        Output   Description
2110   ---------   ------   -----------
2120   ED-SESNUM     I      Number of session (1-50).
2130   ED-SCRLEN     I      Length of a single line on screen.
2140   ED-SCRNUM     I      Number of lines to be retrieved.
2150   ED-NEW-RECTOP I      Start line for retrieve operation.
2160
2170ADDL  -  Adds lines.
2180
2190   Parameter   Input/
2200   Name        Output   Description
2210   ---------   ------   -----------
2220   ED-SESNUM     I      Number of session (1-50).
2230   ED-SCRNUM     I      Number of lines to be added.
2240   ED-NEW-RECTOP I      0 - New lines are added to the end of buffer.
2250                        <num> - New lines added after <num> line.
2260
2270UPDL  -  Updates lines.
2280
2290   Parameter   Input/
2300   Name        Output   Description
2310   ---------   ------   -----------
2320   ED-SESNUM     I      Number of session (1-50).
2330   ED-SCRLEN     I      Length of a single line on screen.
2340   ED-SCRNUM     I      Number of lines to be updated.
2350   ED-NEW-RECTOP I      Start line for update operation.
2360
2370DELL  -  Deletes lines.
2380
2390   Parameter   Input/
2400   Name        Output   Description
2410   ---------   ------   -----------
2420   ED-SESNUM     I      Number of session (1-50).
2430   ED-SCRNUM     I      Number of lines to be deleted.
2440   ED-NEW-RECTOP I      Start line for delete operation.
2450
2460CSES  -  Copies one buffer into another buffer.
2470
2480   Parameter   Input/
2490   Name        Output   Description
2500   ---------   ------   -----------
2510   ED-SESNUM     I      Number of session (1-50).
2520   ED-RECMAX     I      Target session.
2530
2540
2550Main Parameters
2560---------------
2570
2580When the interface is called from within a Natural program, five
2590parameters must be provided:
2600
2610CALLNAT 'USR1035N'
2620         CONTROL-BLOCK CB-ALIN L-PREFIXES CB-ADAT L-DATA-LINES
2630
2640Each parameter is described below:
2650
2660  - CONTROL-BLOCK. This parameter is composed of many subparameters
2670    which specify various attributes of individual requests.
2680    These parameters are described at the end of this section.
2690
2700The remaining four parameters specify the data to be displayed on
2710the screen and how this information is to be represented. The
2720following figure illustrates this information:
2730
2740 +----------------------------------------------------------+
2750 |   Prefix                                                 |
2760 |    area                                                  |
2770 |   <----> <--------- Edit area ---------------------->    |
2780 |                                                          |
2790 |   000010 data.data.data.data.data.data.data.data.data    |
2800 |   000020 data.data.data.data.data.data.data.data.data    |
2810 |   000030 data.data.data.data.data.data.data.data.data    |
2820 |   000040 data.data.data.data.data.data.data.data.data    |
2830 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2840 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2850 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2860 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2870 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2880 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2890 |   XXXXXX data.data.data.data.data.data.data.data.data    |
2900 |                                                          |
2910 |   <----> <------------------------------------------>    |
2920 | CB-ALIN            CB-ADAT   L-DATA                      |
2930 | L-PREFIX                                                 |
2940 +----------------------------------------------------------+
2950
2960  - CB-ALIN.
2970    This parameter describes the attributes of each prefix data line.
2980    Format:          N01/1:yy
2990    Possible values: 1 - AD=I,  2 - AD=IP
3000                     3 - AD=D,  4 - AD=DP
3010                     5 - AD=N,  6 - AD=NP
3020                     yy must be equal to ED-SCRMAX
3030
3040  - L-PREFIX
3050    This parameter contains the prefix data of each line.
3060             Format: Axx/1:yy
3070    Possible values: xx must be equal to ED-PRFLEN
3080                     yy must be equal to ED-SCRMAX
3090
3100  - CB-ADAT
3110    This parameter describes the attributes of each data line.
3120             Format: N01/1:yy
3130    Possible values: The same as for CB-ALIN.
3140                     yy must be equal to ED-SCRMAX
3150
3160  - L-DATA-LINES
3170    This parameter contains the data lines of the source.
3180             Format: Axx/1:yy
3190    Possible values: xx must be equal to ED-SCRLEN
3200                     yy must be equal to ED-SCRMAX
3210
3220
3230 - Control Block
3240
3250   Parameter   Input/
3260   Name        Output   Description
3270   ---------   ------   -----------
3280   ED-SESNUM     I/O    Number of session (0-50).
3290   ED-LOGFLAG    I      ED-LOGFLAG indicates whether a logical name for
3300                        the session has to be in effect. The logical
3310                        name can be specified in ED-LOGNAME.
3320                        Possible values: Y,N
3330   ED-LOGNAME    I      Logical name of the session.
3340   ED-REQUEST    I      Editor request. Examples for each request are
3350                        included as internal subroutines in the
3360                        example program.
3370   ED-LIBRARY    I      Unused.
3380   ED-MEMBER     I      Unused.
3390   ED-RECLEN     I/O    Maximum length of each line.
3400   ED-PRFLEN     I      Length of a prefix line on screen.
3410   ED-SCRLEN     I      Length of a single line on screen.
3420   ED-SCRNUM     I/O    Number of lines on screen.
3430   ED-SCRMAX     I      Maximum number of lines on screen.
3440   ED-RENUM      I      Unused.
3450   /*
3460   ED-MCMND      I      Main command. The main commands are described
3470                        in the 'Natural SAG Editor documentation'.
3480   ED-SCMND      I      Secondary command. ED-SCMND should contain the
3490                        command that is assigned to the pressed PF-key.
3500   ED-CAREA      I/O    Area where the cursor is located; possible
3510                        values are:
3520                        1 - Message line
3530                        2 - Command line
3540                        4 - Prefix area
3550                        5 - Data area
3560   ED-CROW       I/O    Cursor row within the area (in full screen
3570                        mode).
3580                        The content must be a number starting with 1.
3590   ED-CCLM       I/O    Cursor colum within the area (in full screen
3600                        mode).
3610                        ED-CCLM contains 0 if the cursor is located on
3620                        the attribute byte, otherwise a number starting
3630                        with 1.
3640   /*
3650   ED-RECTOP     I/O    Unused.
3660   ED-NEW-RECTOP I/O    Line number of new first line on screen.
3670   ED-RECNUM     I/O    Unused.
3680   ED-NEW-RECNUM   O    Number of lines in the source area.
3690   ED-FILECHG      O    Indicates whether source area has been modified.
3700   ED-SRAUSED      O    Used source area in bytes.
3710   ED-SRAFREE      O    Unused source area in bytes.
3720   ED-FLINE        O    Message text. Explanation for ED-MSGNUM or
3730                        ED-ERRNUM.
3740   ED-MSGNUM       O    Message number. Confirms user actions.
3750   ED-ERRNUM       O    Error number.
3760                           0  ok
3770                         501  invalid request
3780                         503  invalid session number
3790                         504  session does not exist
3800                         520  not enough space in source area
3810                         530  cancel editing
3820                         531  quit editing
3830                         535  save is pending
3840
3850                         601  ED-SCRNUM must be lower/equal as ED-SCRMAX
3860                         602  ED-SCRLEN must be lower/equal as ED-RECLEN
3870                         603  ED-SCRNUM must be equal to the defined
3880                              occurrences of field L-DATA
3890                         604  ED-PRFLEN cannot be bigger as 6.
3900                         605  ED-SCRLEN cannot be bigger as 72.
3910                         606  Both fields L-DATA and L-PREFIX must be
3920                              defined with the same occurrences
3930                         607  ED-SCRLEN * ED-SCRMAX must be lower 14400.
3940                              (not on MAINFRAME)
3950                         608  ED-RECLEN is too big
3960                              If ED-DSTYPE = 'N' it should be <= 256
3970                              If ED-DSTYPE = 'D' it should be lower
3980                              as the SAG editor bufferpool block length.
3990                              (Parameter LRECL of the SYSEDT utility)
4000                         609  ED-SCRMAX must be lower/equal 100
4010
4020   ED-DSTYPE     I      Type of session. Possible values are:
4030                         'N' - Use the Natural source area
4040                         'D' - Use a data buffer
4050   ED-RECMAX     I      Target session.
4060
4070
4080
4090EXAMPLES
4100--------
4110
4120USR1035P contains some examples of how to maintain objects in
4130the Natural source area or in the Natural data buffer.
4140As mentioned above there is an example for each request:
4150
4160OPEN  -  OPEN-SESSION
4170STAT  -  GET-STATUS
4180GETS  -  GET-SCREEN
4190UPDT  -  UPDATE-SCREEN
4200CLSS  -  CLOSE-SESSION
4210GETL  -  GET-LINES
4220ADDL  -  ADD-LINES
4230UPDL  -  UPDATE-LINES
4240DELL  -  DELETE-LINES
4250CSES  -  COPY-SESSION
4260
4270If you maintain an object with screen output, the editor engine
4280needs to know the position of the cursor on the screen. An example
4290of how to compute the cursor position is contained in the two
4300subroutines RELATIVE-CURSOR and ABSOLUTE-CURSOR. These subroutines
4310must be called before and after any screen output.
4320
4330You can maintain an object without screen output. Assign the
4340value TRUE to the logical variable NO-SCREEN and perform one of
4350the examples in the subroutine NO-SCREEN-OUTPUT.
4360
4370You can open a full screen session or an edit area with a smaller
4380size. A smaller edit area is useful for maintenance of an object
4390in a window. The subroutine OPEN-SESSION can be controlled with
4400the logical variable OPEN-WINDOW.
4410Attention: If you change the line size, the number of lines on a
4420screen or the length of the prefix area, your local data area must
4430be adapted to these new values. Otherwise the edit frame L-PREFIX
4440and L-DATA will not be displayed correctly.
4450
4460
4470MAIN COMMANDS
4480-------------
4490The following table contains a list of main commands and a short
4500description of what each command does. For more complete information
4510on each command, see the Natural Software AG Editor documentation.
4520
4530ADVANCE  - Used to specify whether the cursor moves to the next line
4540           automatically after a line update.
4550AORDER   - Used to specify whether newly entered text is to be
4560           automatically justified within the set boundaries.
4570BNDS     - Used to restrict the effect of certain commands to a
4580           specific range of columns.
4590BOTTOM   - Used to scroll to the end of the object being edited.
4600CANCEL   - Delivers message number (ED-ERRNUM) 530.
4610CAPS     - Used to switch upper-case translation on and off.
4620CENTER   - Used to center editor content.
4630CHANGE   - Used to replace one character string by another string.
4640COLS     - Displays a line at the top of the edit area showing
4650           column positions.
4660CWINDOW  - Used to copy a data window in accordance with command
4670           parameters.
4680DELETE   - Used to delete lines.
4690DOWN     - Used to scroll downwards in the source code.
4700DWINDOW  - Used to delete the last defined data window.
4710DX       - Deletes the line marked with the .X label.
4720DX-Y     - Deletes all lines between the .X and .Y labels.
4730DY       - Deletes the line marked with the .Y label.
4740EMPTY    - Controls the deletion of blank lines in the editor.
4750ESCAPE   - Activates/deactivates the escape character to preceded line
4760           commands entered in the first column of the source code.
4770EX       - Deletes all lines preceding the line marked with .X label.
4780EX-Y     - Deletes all lines preceding .X label and following .Y label.
4790EXCLUDE  - Used to exclude lines from being displayed.
4800EY       - Deletes all lines following the line marked with .Y label.
4810FIND     - Used to search for a particular character string.
4820FIX      - Used to specify the number of columns to remain displayed
4830           when scrolling to the right.
4840HEX      - Used to switch hexadecimal display mode on and off.
4850HOME     - Returns the cursor to the command field at the next ENTER.
4860INCLUDE  - Used to re-display lines that were excluded from display
4870           by the EXCLUDE command.
4880JLEFT    - Used to align source code left-justified.
4890JRIGHT   - Used to align source code right-justified.
4900JUSTIFY  - Used to set the justification mode for the line commands
4910           TO and TOO.
4920LABEL    - Used to mark the current line (line at the top of the edit
4930           area) will a specified label.
4940LC       - Used to change one or more lines to lower case.
4950LEFT     - Scrolls the source code to the left.
4960LIMIT    - Used to specify the maximum number of lines to be searched
4970           with a FIND or RFIND command.
4980LOCATE   - Used to scroll a specific line to the top of the edit area.
4990LOG      - Activates or deactivates the log file containing a
5000           history of all modifications made since session begin.
5010MASK     - Activates or deactivates the mask function.
5020MSO      - Used to specify whether multiple session operations are
5030           possible or not.
5040MWINDOW  - Used to move a data window in accordance with the command
5050           parameters.
5060NULLS    - Used to determine whether the source code lines are to be
5070           filled with null characters.
5080ORDER    - Used to join source code lines.
5090OWINDOW  - Used to overlay a data window.
5100POINT    - Places the line marked with the line command NZ at the top
5110           of the data area.
5120POWER    - Switches the editor to text-entry mode. Entered text is
5130           placed in the first line of the edit area.
5140PROFILE  - Displays the editor profile at the top of the edit screen.
5150PROTECT  - Used to protect the prefix area of the editor.
5160QUIT     - Delivers message number (ED-ERRNUM) 531.
5170RCHANGE  - Repeats the last CHANGE command.
5180RENUMBER - Renumber the lines.
5190RESET    - Resets all pending line commands and deletes all line
5200           labels.
5210RFIND    - Repeats the last FIND command.
5220RIGHT    - Scrolls the source code to the right.
5230SAVE     - Delivers message number (ED-ERRNUM) 535.
5240SHIFT    - Shifts a block of lines between the .X and .Y labels to
5250           the right or left by a number of columns.
5260TABS     - Used to control tabulator settings.
5270TOP      - Used to scroll to the beginning of the object being edited.
5280UC       - Converts one or more lines to upper case.
5290UNDO     - If the log file is active (see LOG command), this command
5300           successively backs out all changes made since pressing ENTER.
5310UP       - Scrolls upwards in the source code.
5320WINDOW   - Used to define a data window to be copied or moved.
5330X        - Places the line marked with the line command .X at the
5340           top fo the data area.
5350XSWAP    - Used to exchange displayed lines with excluded lines.
5360Y        - Places the line marked with the line command .Y at the
5370           top of the data area.
5380
5390
5400LINE COMMANDS
5410-------------
5420
5430Note:  Many of the following line commands, such as the C(n) or D(n)
5440       commands, allow the input of an optional integer parameter value.
5450       This parameter value means "repeat this command n times".
5460       When issuing line commands containing an integer parameter,
5470       place the integer immediately after the command. For example,
5480       C4 (copy line four times) or I5 (insert five lines).
5490
5500A    - Marks the target line for a move (M, Mn, MM) or copy (C, Cn, CC)
5510       line command. The moved/copied line(s) are inserted after
5520       this line.
5530B    - Marks the target line for a move (M, Mn, MM) or copy (C, Cn, CC)
5540       line command. The moved/copied line(s) are inserted before
5550       this line.
5560BNDS - Displays the boundary positions in this line.
5570C(n) - Copies the current line or the next n lines to the position
5580       indicated by an A, B or O line command.
5590CC   - Marks the first line of a block of lines to be copied.
5600       A second CC command is required to mark the last line of the
5610       block to be copied. The lines are copied to the position
5620       indicated by an A, B or O line command.
5630CX   - Copies the line labelled .X. Inserts data after this line.
5640CY   - Copies the line labelled .Y. Inserts data after this line.
5650CX-Y - Copies the block of lines from the line labelled .X through
5660       the line labelled .Y. Inserts data after this line.
5670COLS - Displays the column positions in this line.
5680D(n) - Deletes the current line or the next n lines.
5690DD   - Marks the first line of a block to be deleted. A second DD
5700       command is required to mark the last line of the block to
5710       be deleted. The deletion is performed after second the DD has
5720       been entered. DX Deletes the line labelled .X.
5730DY   - Deletes the line labelled .Y.
5740DX-Y - Deletes the block of lines from the line labelled .X to the
5750       line labelled .Y.
5760F(n) - Includes the first excluded line or the first n excluded lines.
5770I    - Inserts one line. The editor switches to insert mode.
5780I(n) - Inserts a single line or n lines.
5790       You may type data in the new lines. When
5800       you press ENTER, unused lines are deleted but one blank line
5810       remains with the cursor in it (editor stays in insert mode).
5820J    - Joins next line with this one. You can specify how
5830       many of the characters of the following line are to be
5840       joined by placing the cursor at the point in the line where
5850       it is to be separated and press ENTER. To join the entire
5860       line, place the cursor outside the line to be joined. This
5870       command is identical to the TJ command.
5880L(n) - Includes the last excluded line or last n excluded lines.
5890LC   - Changes this line to lower case.
5900LC(n)- Changes the following line or n lines to lower case.
5910LCC  - Marks the first line of a block to be changed to lower case.
5920LJ   - Justifies the data within the set boundaries in this line
5930       with the left boundary.
5940LJJ  - Marks the first line of a block of data within the set
5950       boundaries to be justified to the left. A second LJJ
5960       command is required to mark the last line of the block
5970       to be justified. The justification is performed after the
5980       second LJJ command has been issued.
5990M(n) - Moves the current line or next n lines to the position indicated
6000       by an A, B or O line command.
6010MM   - Marks the first line of the block to be moved.
6020       A second MM command is required to mark the last line of the
6030       block to be moved. The lines are moved to the position
6040       indicated by an A, B or O line command.
6050MASK - Inserts a blank line in the editor into which you can create
6060       a mask. This line is inserted whenever the insert (In) line
6070       command is used to create one or more new lines (see also
6080       the editor command MASK).
6090MX   - Moves the line labelled .X. Inserts it after this line.
6100MY   - Moves the line labelled .Y. Inserts it after this line.
6110MX-Y - Moves the block of lines from the line labelled .X to the
6120       line labelled .Y. Inserts it after this line.
6130N    - Modifications made in this line do not take effect when ENTER
6140       is pressed.
6150NZ   - The line marked with this command is placed at the top
6160       of the editor area when a POINT editor command is issued.
6170O(n) - Marks this line or the following n lines as target lines
6180       for a move (M, Mn, MM) or copy (C, Cn, CC) line command.
6190       The moved/copied line(s) are merged with this line, that is,
6200       blank characters in the line are overlaid.
6210OO   - Marks the first line of a block of target lines for a move
6220       (M, Mn, MM) or copy (C, Cn, CC) line command. A second OO
6230       command is required to mark the last line of the block of
6240       target lines. The moved/copied line(s) are merged with these
6250       lines, that is, blank characters in the lines are overlaid.
6260R    - Repeats this line once or n times.
6270RR   - Marks the first line of a block to be repeated. A second
6280       RR command is required to mark the last line of the block
6290       to be repeated. The repeat operation is performed after the
6300       second RR has been entered.
6310RRn  - Used to mark the last line of a block to be repeated (see RR
6320       command). The block is repeated n times.
6330RJ   - Justifies the data within the set boundaries in this line
6340       with the right boundary.
6350RJJ  - Marks the first line of a block of data within the set
6360       boundaries to be justified to the right. A second RJJ
6370       command is required to mark the last line of the block
6380       to be justified. The justification is performed after the
6390       second RJJ has been issued.
6400S    - Splits this line into two lines beginning at the cursor
6410       position. Type in the command, move the cursor to the
6420       position where the line is to be split, and press ENTER.
6430T    - Scrolls the data to make the marked line the top line.
6440TABS - Displays the tab positions in this line.
6450TC   - Centers the data within the set boundaries in this line.
6460TCC  - Marks the first line of a block of data within the set
6470       boundaries to be centered. A second TCC command is
6480       required to mark the last line of the block of the centered.
6490       The centering is performed after the second TCC command has
6500       been issued.
6510TE   - Switches editor to text enter mode (blank screen
6520       to end of screen).
6530TF   - Joins this line with the following lines until the next
6540       blank line. The bounds settings can be used to restrict
6550       the columns affected (see BNDS command).
6560TFn  - This line command may be entered with a numerical value
6570       specifying the right boundary, e.g. the line command TF50
6580       orders data with column 50.
6590TI   - Inverts sequence of all characters in the current line and
6600       within the set boundaries.
6610TII  - Marks the first line of a block of text to be inverted within
6620       set boundaries. Requires a second TII to mark the last
6630       line of the block.
6640TJ   - Joins next line with this one. Same as the join (J) command.
6650TO   - Joins this line with the next one.
6660TOO  - Marks the first line of a block of data within the set
6670       boundaries to be joined. A second TOO command is required
6680       to mark the last line of the block to be joined. The
6690       function is performed after the second TOO has been issued.
6700TS   - Splits this line into two lines at the cursor position; an
6710       empty line is also automatically inserted, but deleted if
6720       unused (identical to S line comm and).
6730UC(n)- Changes current line or following n lines to upper case.
6740UCC  - Marks the first line of a block to be changed to upper case.
6750       A second UCC is required to mark the last line of the block.
6760W(n) - Opens window with one line or n lines.
6770WC   - Copies the data window. The cursor position marks the
6780       column at which this line is to be split to insert the
6790       copied data.
6800WCn  - Splits this line in column 'n' and copies the data between
6810       the resulting two lines.
6820WE   - Marks end of data window. Works in the same way as WS.
6830WM   - Moves the data window. Works in the same way as WC, but the
6840       original data are deleted after the copy operation.
6850WMn  - Splits this line in column 'n' and moves the data between the
6860       resulting two lines.
6870WS   - Marks start of data window. The cursor position marks the
6880       column from which data are read. If the cursor is not
6890       in the line for which the command is entered, column 1 is taken.
6900WSn  - Data window starts in column 'n' of this line.
6910.X   - Marks this line .X
6920X(n) - Excludes the current line or the following n lines.
6930.label - markes the current line with ".label". The label may be
6940         any string of 1 to 4 alphabetical characters.
6950.Y   - Marks this line .Y
6960
6970*****  End of Description  *****
