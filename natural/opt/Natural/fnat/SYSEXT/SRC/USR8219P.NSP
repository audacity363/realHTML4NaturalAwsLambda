0010/*  This program serves as example how to design a user-defined
0020/*  program to call 'USR8219N'.
0030/***********************************************************************
0040DEFINE DATA
0050/*----------------------------------------------------------------------
0060/* Data Definitions for USR8219N
0070/*----------------------------------------------------------------------
0080LOCAL
00901 RETURN-CODE    (I04)         /* USR8219N return code
0100LOCAL                          /* Align ACBX
01101 ACBX           (B192)        /* Extended Adabas Control Block
01201 REDEFINE ACBX
0130  2 ACBX-TYP     (B01)         /* Call Type
0140  2 ACBX-RSV1    (B01)         /* (internal use only)
0150  2 ACBX-VER     (A02)         /* Version Indicator; 'F2' for ACBX
0160  2 ACBX-LEN     (B02)         /* Length of ACBX; currently 192
0170  2 ACBX-CMD     (A02)         /* Command Code
0180  2 ACBX-RSV2    (B02)         /* (internal use only)
0190  2 ACBX-RSP     (B02)         /* Adabas Response Code
0200  2 ACBX-CID     (A04)         /* Command ID
0210  2 ACBX-DBID    (B04)         /* Database ID
0220  2 ACBX-FNR     (B04)         /* File number
0230  2 ACBX-FILL1   (B04)         /* (do not use)
0240  2 ACBX-ISN     (B04)         /* ISN
0250  2 ACBX-FILL2   (B04)         /* (do not use)
0260  2 ACBX-ISL     (B04)         /* ISN lower limit
0270  2 ACBX-FILL3   (B04)         /* (do not use)
0280  2 ACBX-ISQ     (B04)         /* ISN Quantity
0290  2 ACBX-COP1    (A01)         /* Command Option 1
0300  2 ACBX-COP2    (A01)         /* Command Option 2
0310  2 ACBX-COP3    (A01)         /* Command Option 3
0320  2 ACBX-COP4    (A01)         /* Command Option 4
0330  2 ACBX-COP5    (A01)         /* Command Option 5
0340  2 ACBX-COP6    (A01)         /* Command Option 6
0350  2 ACBX-COP7    (A01)         /* Command Option 7
0360  2 ACBX-COP8    (A01)         /* Command Option 8
0370  2 ACBX-ADD1    (A08)         /* Additions 1
0380  2 ACBX-ADD2    (B04)         /* Additions 2
0390  2 ACBX-ADD3    (A08)         /* Additions 3
0400  2 ACBX-ADD4    (A08)         /* Additions 4
0410  2 ACBX-ADD5    (A08)         /* Additions 5
0420  2 ACBX-ADD6    (A08)         /* Additions 6
0430  2 ACBX-RSV3    (B04)         /* (internal use only)
0440  2 ACBX-FILL4   (B04)         /* (do not use)
0450  2 ACBX-ERRA    (B04)         /* Error Offset in Buffer
0460  2 ACBX-ERRB    (A02)         /* Error Character Field
0470  2 ACBX-ERRC    (B02)         /* Error Subcode
0480  2 ACBX-ERRD    (A01)         /* Error Buffer ID
0490  2 ACBX-ERRE    (B01)         /* (internal use only)
0500  2 ACBX-ERRF    (B02)         /* Error Buffer Sequence Number
0510  2 ACBX-SUBR    (B02)         /* Subcomponent Response Code
0520  2 ACBX-SUBS    (B02)         /* Subcomponent Response Subcode
0530  2 ACBX-SUBT    (A04)         /* Subcomponent Error Text
0540  2 ACBX-FILL5   (B04)         /* (do not use)
0550  2 ACBX-LCMP    (B04)         /* Compressed Record Length
0560  2 ACBX-FILL6   (B04)         /* (do not use)
0570  2 ACBX-LDEC    (B04)         /* Decompressed Record Length
0580  2 ACBX-FILL7   (B04)         /* (do not use)
0590  2 ACBX-CMDT    (B04)         /* Command Time
0600  2 ACBX-USER    (A16)         /* User Area
0610  2 ACBX-RSV4    (B24)         /* (internal use only)
0620/*
0630/* Adabas buffer
0640/*
06501 FORMAT-BUFFER-1     (A) DYNAMIC   /*  1 optional: Format buffer 1
06601 RECORD-BUFFER-1     (A) DYNAMIC   /*  2 optional: Record buffer 1
06701 MULTIFETCH-BUFFER-1 (A) DYNAMIC   /*  3 optional: Multifetch buffer 1
06801 SEARCH-BUFFER       (A) DYNAMIC   /*  4 optional: Search buffer
06901 VALUE-BUFFER        (A) DYNAMIC   /*  5 optional: Value buffer
07001 ISN-BUFFER          (A) DYNAMIC   /*  6 optional: ISN buffer
07101 USER-BUFFER         (A) DYNAMIC   /*  7 optional: User buffer
07201 FORMAT-BUFFER-2     (A) DYNAMIC   /*  8 optional: Format buffer 2
07301 RECORD-BUFFER-2     (A) DYNAMIC   /*  9 optional: Record buffer 2
07401 MULTIFETCH-BUFFER-2 (A) DYNAMIC   /* 10 optional: Multifetch buffer 2
07501 FORMAT-BUFFER-3     (A) DYNAMIC   /* 11 optional: Format buffer 3
07601 RECORD-BUFFER-3     (A) DYNAMIC   /* 12 optional: Record buffer 3
07701 MULTIFETCH-BUFFER-3 (A) DYNAMIC   /* 13 optional: Multifetch buffer 3
0780/*----------------------------------------------------------------------
0790/* Other Data Definitions
0800/*----------------------------------------------------------------------
0810LOCAL
08201 DUMMY_BUFFER  (A) DYNAMIC         /* dummy buffer for gap in parmlist
08301 DBID    (I4)                      /* database ID
08401 FNR     (I4)                      /* file number
08501 XREM    (I4)                      /* remainder
08601 XINDEX  (I4)                      /* index
08701 XSIZE   (I04)                     /* length of data
08801 XSTART  (I04)                     /* start position for output
08901 XDATA   (A16)                     /* print data
09001 ADA-RSP (I2)                      /* Adabas response code
09101 ADA-SUB (I2)                      /* Adabas subcode
09201 XLINE   (A70)                     /* Output line
0930END-DEFINE
0940/*---------------------------------------------------------------------
0950/* Example of ACBX direct call interface: LF Command
0960/*---------------------------------------------------------------------
0970/*
0980/* Get database ID and file number
0990/*
1000DBID  := 1                /* Use database which supports ACBX interface
1010FNR   := 1                /* file number
1020INPUT (AD=MITL'_')
1030  'Issue LF command using ACBX protocol.' //
1040  'Database ID ..' DBID /
1050  'File number ..' FNR
1060/*----------------------------------------------------------------------
1070/*  Prepare ACBX
1080/*----------------------------------------------------------------------
1090RESET ACBX                /* Reset extended Adabas control block
1100ACBX-VER   := 'F2'        /* Version Indicator: ACBX is used
1110ACBX-LEN   := 192         /* ACBX Length
1120ACBX-CMD   := 'LF'        /* Command Code: Read field definition
1130ACBX-DBID  := DBID        /* Database ID
1140ACBX-FNR   := FNR         /* File Number
1150ACBX-COP2  := 'X'         /* Command Option 2: Type of LF information
1160/*----------------------------------------------------------------------
1170/*  Prepare buffers
1180/*----------------------------------------------------------------------
1190FORMAT-BUFFER-1 := '.'    /* LF wants a format buffer
1200/*
1210/* Prepare Record buffer 1 to receive data
1220MOVE ALL ' ' TO RECORD-BUFFER-1 UNTIL 32768
1230/*----------------------------------------------------------------------
1240/*  Call Adabas with ACBX by using USR8219N
1250/*----------------------------------------------------------------------
1260/* LF requires only the format-buffer-1 and the record-buffer-1
1270CALLNAT 'USR8219N'
1280  RETURN-CODE             /* USR8219N return code
1290  ACBX                    /* Extended Adabas Control Block
1300  FORMAT-BUFFER-1         /* Format buffer 1
1310  RECORD-BUFFER-1         /* Record buffer 1
1320/* The further buffers are not used and can be omitted
1330/*
1340/*----------------------------------------------------------------------
1350/*  Call USR8219N with all buffers
1360/*----------------------------------------------------------------------
1370* CALLNAT 'USR8219N'
1380*   RETURN-CODE             /* USR8219N return code
1390*   ACBX                    /* Extended Adabas Control Block
1400*   FORMAT-BUFFER-1         /* Format buffer 1
1410*   RECORD-BUFFER-1         /* Record buffer 1
1420*   MULTIFETCH-BUFFER-1     /* Multifetch buffer 1
1430*   SEARCH-BUFFER           /* Search buffer
1440*   VALUE-BUFFER            /* Value buffer
1450*   ISN-BUFFER              /* ISN buffer
1460*   USER-BUFFER             /* User buffer
1470*   FORMAT-BUFFER-2         /* Format buffer 2
1480*   RECORD-BUFFER-2         /* Record buffer 2
1490*   MULTIFETCH-BUFFER-2     /* Multifetch buffer 2
1500*   FORMAT-BUFFER-3         /* Format buffer 3
1510*   RECORD-BUFFER-3         /* Record buffer 3
1520*   MULTIFETCH-BUFFER-3     /* Multifetch buffer 3
1530*
1540/*----------------------------------------------------------------------
1550/*  Call USR8219N with gaps in the buffer list
1560/*----------------------------------------------------------------------
1570* CALLNAT 'USR8219N'
1580*   RETURN-CODE             /* USR8219N return code
1590*   ACBX                    /* Extended Adabas Control Block
1600*   FORMAT-BUFFER-1         /* Format buffer 1
1610*   RECORD-BUFFER-1         /* Record buffer 1
1620*   DUMMY_BUFFER            /* Multifetch buffer 1 -> gap, not used
1630*   SEARCH-BUFFER           /* Search buffer
1640*   VALUE-BUFFER            /* Value buffer
1650*   ISN-BUFFER              /* ISN buffer
1660*   DUMMY_BUFFER            /* User buffer -> gap, not used
1670*   FORMAT-BUFFER-2         /* Format buffer 2
1680*   RECORD-BUFFER-2         /* Record buffer 2
1690* /* The further buffers are not used and can be omitted
1700/*
1710/*----------------------------------------------------------------------
1720/*  Check return code from USR8219N
1730/*----------------------------------------------------------------------
1740IF RETURN-CODE NE 0
1750  DECIDE FOR FIRST CONDITION
1760    WHEN RETURN-CODE > 3000 AND RETURN-CODE < 4000
1770      ADA-RSP := ACBX-RSP
1780      ADA-SUB := ACBX-ERRC
1790      WRITE
1800        'Return code from USR8219N ..' RETURN-CODE (NL=5) /
1810        'Adabas response code .......' ADA-RSP  (NL=5) /
1820        'Adabas subcode .............' ADA-SUB (NL=5)
1830      IF ADA-RSP = 253 AND ADA-SUB = 11 /* Unsupported ABD version
1840        WRITE /
1850          'ACBX protocol not yet supported. Use higher Natural version.'
1860      END-IF
1870    WHEN RETURN-CODE = -1
1880      WRITE 'DB type invalid; expected ADA2.'
1890    WHEN RETURN-CODE < -1
1900      WRITE 'Internal error in USR8219N:' RETURN-CODE
1910    WHEN NONE
1920      WRITE 'Unexpected return code from USR8219N:' RETURN-CODE
1930  END-DECIDE
1940  ESCAPE ROUTINE
1950END-IF
1960/*----------------------------------------------------------------------
1970/*  Print file description
1980/*----------------------------------------------------------------------
1990/*
2000/* After the call, if data was received in a buffer, the allocated
2010/* length (*LENGTH) of the buffer is the length of the received data.
2020/*
2030XSIZE := *LENGTH (RECORD-BUFFER-1)  /* received data length
2040/*
2050COMPRESS 'Field definitions (FDT) of file ..' DBID '/' FNR INTO XLINE
2060WRITE XLINE /
2070  'Bytes received ...................' XSIZE (AD=L) /
2080/*
2090XSTART := 1                         /* start of 16 bytes of output
2100XREM   := XSIZE                     /* remaining data length
2110XINDEX := 1                         /* count
2120REPEAT UNTIL XREM <= 0
2130  IF XREM > 16
2140    XDATA := SUBSTRING(RECORD-BUFFER-1,XSTART,16)
2150  ELSE
2160    XDATA := SUBSTRING(RECORD-BUFFER-1,XSTART,XREM)
2170  END-IF
2180  WRITE XINDEX (AL=6) XDATA (EM=H(16)) XDATA
2190/* next chunk of data
2200  XSTART := XSTART + 16
2210  XREM   := XREM   - 16
2220  XINDEX := XINDEX + 1
2230END-REPEAT
2240END
